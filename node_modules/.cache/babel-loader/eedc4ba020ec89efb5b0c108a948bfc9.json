{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"rootClassName\", \"style\", \"className\", \"tabIndex\", \"items\", \"children\", \"direction\", \"id\", \"mode\", \"inlineCollapsed\", \"disabled\", \"disabledOverflow\", \"subMenuOpenDelay\", \"subMenuCloseDelay\", \"forceSubMenuRender\", \"defaultOpenKeys\", \"openKeys\", \"activeKey\", \"defaultActiveFirst\", \"selectable\", \"multiple\", \"defaultSelectedKeys\", \"selectedKeys\", \"onSelect\", \"onDeselect\", \"inlineIndent\", \"motion\", \"defaultMotions\", \"triggerSubMenuAction\", \"builtinPlacements\", \"itemIcon\", \"expandIcon\", \"overflowedIndicator\", \"overflowedIndicatorPopupClassName\", \"getPopupContainer\", \"onClick\", \"onOpenChange\", \"onKeyDown\", \"openAnimation\", \"openTransitionName\", \"_internalRenderMenuItem\", \"_internalRenderSubMenuItem\"];\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport shallowEqual from 'shallowequal';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport warning from \"rc-util/es/warning\";\nimport Overflow from 'rc-overflow';\nimport MenuItem from './MenuItem';\nimport { parseItems } from './utils/nodeUtil';\nimport MenuContextProvider from './context/MenuContext';\nimport useMemoCallback from './hooks/useMemoCallback';\nimport { warnItemProp } from './utils/warnUtil';\nimport SubMenu from './SubMenu';\nimport useAccessibility from './hooks/useAccessibility';\nimport useUUID from './hooks/useUUID';\nimport { PathRegisterContext, PathUserContext } from './context/PathContext';\nimport useKeyRecords, { OVERFLOW_KEY } from './hooks/useKeyRecords';\nimport { getMenuId, IdContext } from './context/IdContext';\nimport PrivateContext from './context/PrivateContext';\nimport { useImperativeHandle } from 'react';\n/**\n * Menu modify after refactor:\n * ## Add\n * - disabled\n *\n * ## Remove\n * - openTransitionName\n * - openAnimation\n * - onDestroy\n * - siderCollapsed: Seems antd do not use this prop (Need test in antd)\n * - collapsedWidth: Seems this logic should be handle by antd Layout.Sider\n */\n// optimize for render\n\nvar EMPTY_LIST = [];\nvar Menu = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _childList$, _classNames;\n\n  var _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? 'rc-menu' : _props$prefixCls,\n      rootClassName = props.rootClassName,\n      style = props.style,\n      className = props.className,\n      _props$tabIndex = props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n      items = props.items,\n      children = props.children,\n      direction = props.direction,\n      id = props.id,\n      _props$mode = props.mode,\n      mode = _props$mode === void 0 ? 'vertical' : _props$mode,\n      inlineCollapsed = props.inlineCollapsed,\n      disabled = props.disabled,\n      disabledOverflow = props.disabledOverflow,\n      _props$subMenuOpenDel = props.subMenuOpenDelay,\n      subMenuOpenDelay = _props$subMenuOpenDel === void 0 ? 0.1 : _props$subMenuOpenDel,\n      _props$subMenuCloseDe = props.subMenuCloseDelay,\n      subMenuCloseDelay = _props$subMenuCloseDe === void 0 ? 0.1 : _props$subMenuCloseDe,\n      forceSubMenuRender = props.forceSubMenuRender,\n      defaultOpenKeys = props.defaultOpenKeys,\n      openKeys = props.openKeys,\n      activeKey = props.activeKey,\n      defaultActiveFirst = props.defaultActiveFirst,\n      _props$selectable = props.selectable,\n      selectable = _props$selectable === void 0 ? true : _props$selectable,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      defaultSelectedKeys = props.defaultSelectedKeys,\n      selectedKeys = props.selectedKeys,\n      onSelect = props.onSelect,\n      onDeselect = props.onDeselect,\n      _props$inlineIndent = props.inlineIndent,\n      inlineIndent = _props$inlineIndent === void 0 ? 24 : _props$inlineIndent,\n      motion = props.motion,\n      defaultMotions = props.defaultMotions,\n      _props$triggerSubMenu = props.triggerSubMenuAction,\n      triggerSubMenuAction = _props$triggerSubMenu === void 0 ? 'hover' : _props$triggerSubMenu,\n      builtinPlacements = props.builtinPlacements,\n      itemIcon = props.itemIcon,\n      expandIcon = props.expandIcon,\n      _props$overflowedIndi = props.overflowedIndicator,\n      overflowedIndicator = _props$overflowedIndi === void 0 ? '...' : _props$overflowedIndi,\n      overflowedIndicatorPopupClassName = props.overflowedIndicatorPopupClassName,\n      getPopupContainer = props.getPopupContainer,\n      onClick = props.onClick,\n      onOpenChange = props.onOpenChange,\n      onKeyDown = props.onKeyDown,\n      openAnimation = props.openAnimation,\n      openTransitionName = props.openTransitionName,\n      _internalRenderMenuItem = props._internalRenderMenuItem,\n      _internalRenderSubMenuItem = props._internalRenderSubMenuItem,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var childList = React.useMemo(function () {\n    return parseItems(children, items, EMPTY_LIST);\n  }, [children, items]);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mounted = _React$useState2[0],\n      setMounted = _React$useState2[1];\n\n  var containerRef = React.useRef();\n  var uuid = useUUID(id);\n  var isRtl = direction === 'rtl'; // ========================= Warn =========================\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(!openAnimation && !openTransitionName, '`openAnimation` and `openTransitionName` is removed. Please use `motion` or `defaultMotion` instead.');\n  } // ========================= Mode =========================\n\n\n  var _React$useMemo = React.useMemo(function () {\n    if ((mode === 'inline' || mode === 'vertical') && inlineCollapsed) {\n      return ['vertical', inlineCollapsed];\n    }\n\n    return [mode, false];\n  }, [mode, inlineCollapsed]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      mergedMode = _React$useMemo2[0],\n      mergedInlineCollapsed = _React$useMemo2[1]; // ====================== Responsive ======================\n\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      lastVisibleIndex = _React$useState4[0],\n      setLastVisibleIndex = _React$useState4[1];\n\n  var allVisible = lastVisibleIndex >= childList.length - 1 || mergedMode !== 'horizontal' || disabledOverflow; // ========================= Open =========================\n\n  var _useMergedState = useMergedState(defaultOpenKeys, {\n    value: openKeys,\n    postState: function postState(keys) {\n      return keys || EMPTY_LIST;\n    }\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedOpenKeys = _useMergedState2[0],\n      setMergedOpenKeys = _useMergedState2[1];\n\n  var triggerOpenKeys = function triggerOpenKeys(keys) {\n    setMergedOpenKeys(keys);\n    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(keys);\n  }; // >>>>> Cache & Reset open keys when inlineCollapsed changed\n\n\n  var _React$useState5 = React.useState(mergedOpenKeys),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      inlineCacheOpenKeys = _React$useState6[0],\n      setInlineCacheOpenKeys = _React$useState6[1];\n\n  var isInlineMode = mergedMode === 'inline';\n  var mountRef = React.useRef(false); // Cache\n\n  React.useEffect(function () {\n    if (isInlineMode) {\n      setInlineCacheOpenKeys(mergedOpenKeys);\n    }\n  }, [mergedOpenKeys]); // Restore\n\n  React.useEffect(function () {\n    if (!mountRef.current) {\n      mountRef.current = true;\n      return;\n    }\n\n    if (isInlineMode) {\n      setMergedOpenKeys(inlineCacheOpenKeys);\n    } else {\n      // Trigger open event in case its in control\n      triggerOpenKeys(EMPTY_LIST);\n    }\n  }, [isInlineMode]); // ========================= Path =========================\n\n  var _useKeyRecords = useKeyRecords(),\n      registerPath = _useKeyRecords.registerPath,\n      unregisterPath = _useKeyRecords.unregisterPath,\n      refreshOverflowKeys = _useKeyRecords.refreshOverflowKeys,\n      isSubPathKey = _useKeyRecords.isSubPathKey,\n      getKeyPath = _useKeyRecords.getKeyPath,\n      getKeys = _useKeyRecords.getKeys,\n      getSubPathKeys = _useKeyRecords.getSubPathKeys;\n\n  var registerPathContext = React.useMemo(function () {\n    return {\n      registerPath: registerPath,\n      unregisterPath: unregisterPath\n    };\n  }, [registerPath, unregisterPath]);\n  var pathUserContext = React.useMemo(function () {\n    return {\n      isSubPathKey: isSubPathKey\n    };\n  }, [isSubPathKey]);\n  React.useEffect(function () {\n    refreshOverflowKeys(allVisible ? EMPTY_LIST : childList.slice(lastVisibleIndex + 1).map(function (child) {\n      return child.key;\n    }));\n  }, [lastVisibleIndex, allVisible]); // ======================== Active ========================\n\n  var _useMergedState3 = useMergedState(activeKey || defaultActiveFirst && ((_childList$ = childList[0]) === null || _childList$ === void 0 ? void 0 : _childList$.key), {\n    value: activeKey\n  }),\n      _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n      mergedActiveKey = _useMergedState4[0],\n      setMergedActiveKey = _useMergedState4[1];\n\n  var onActive = useMemoCallback(function (key) {\n    setMergedActiveKey(key);\n  });\n  var onInactive = useMemoCallback(function () {\n    setMergedActiveKey(undefined);\n  });\n  useImperativeHandle(ref, function () {\n    return {\n      list: containerRef.current,\n      focus: function focus(options) {\n        var _childList$find;\n\n        var shouldFocusKey = mergedActiveKey !== null && mergedActiveKey !== void 0 ? mergedActiveKey : (_childList$find = childList.find(function (node) {\n          return !node.props.disabled;\n        })) === null || _childList$find === void 0 ? void 0 : _childList$find.key;\n\n        if (shouldFocusKey) {\n          var _containerRef$current, _containerRef$current2, _containerRef$current3;\n\n          (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : (_containerRef$current2 = _containerRef$current.querySelector(\"li[data-menu-id='\".concat(getMenuId(uuid, shouldFocusKey), \"']\"))) === null || _containerRef$current2 === void 0 ? void 0 : (_containerRef$current3 = _containerRef$current2.focus) === null || _containerRef$current3 === void 0 ? void 0 : _containerRef$current3.call(_containerRef$current2, options);\n        }\n      }\n    };\n  }); // ======================== Select ========================\n  // >>>>> Select keys\n\n  var _useMergedState5 = useMergedState(defaultSelectedKeys || [], {\n    value: selectedKeys,\n    // Legacy convert key to array\n    postState: function postState(keys) {\n      if (Array.isArray(keys)) {\n        return keys;\n      }\n\n      if (keys === null || keys === undefined) {\n        return EMPTY_LIST;\n      }\n\n      return [keys];\n    }\n  }),\n      _useMergedState6 = _slicedToArray(_useMergedState5, 2),\n      mergedSelectKeys = _useMergedState6[0],\n      setMergedSelectKeys = _useMergedState6[1]; // >>>>> Trigger select\n\n\n  var triggerSelection = function triggerSelection(info) {\n    if (selectable) {\n      // Insert or Remove\n      var targetKey = info.key;\n      var exist = mergedSelectKeys.includes(targetKey);\n      var newSelectKeys;\n\n      if (multiple) {\n        if (exist) {\n          newSelectKeys = mergedSelectKeys.filter(function (key) {\n            return key !== targetKey;\n          });\n        } else {\n          newSelectKeys = [].concat(_toConsumableArray(mergedSelectKeys), [targetKey]);\n        }\n      } else {\n        newSelectKeys = [targetKey];\n      }\n\n      setMergedSelectKeys(newSelectKeys); // Trigger event\n\n      var selectInfo = _objectSpread(_objectSpread({}, info), {}, {\n        selectedKeys: newSelectKeys\n      });\n\n      if (exist) {\n        onDeselect === null || onDeselect === void 0 ? void 0 : onDeselect(selectInfo);\n      } else {\n        onSelect === null || onSelect === void 0 ? void 0 : onSelect(selectInfo);\n      }\n    } // Whatever selectable, always close it\n\n\n    if (!multiple && mergedOpenKeys.length && mergedMode !== 'inline') {\n      triggerOpenKeys(EMPTY_LIST);\n    }\n  }; // ========================= Open =========================\n\n  /**\n   * Click for item. SubMenu do not have selection status\n   */\n\n\n  var onInternalClick = useMemoCallback(function (info) {\n    onClick === null || onClick === void 0 ? void 0 : onClick(warnItemProp(info));\n    triggerSelection(info);\n  });\n  var onInternalOpenChange = useMemoCallback(function (key, open) {\n    var newOpenKeys = mergedOpenKeys.filter(function (k) {\n      return k !== key;\n    });\n\n    if (open) {\n      newOpenKeys.push(key);\n    } else if (mergedMode !== 'inline') {\n      // We need find all related popup to close\n      var subPathKeys = getSubPathKeys(key);\n      newOpenKeys = newOpenKeys.filter(function (k) {\n        return !subPathKeys.has(k);\n      });\n    }\n\n    if (!shallowEqual(mergedOpenKeys, newOpenKeys)) {\n      triggerOpenKeys(newOpenKeys);\n    }\n  });\n  var getInternalPopupContainer = useMemoCallback(getPopupContainer); // ==================== Accessibility =====================\n\n  var triggerAccessibilityOpen = function triggerAccessibilityOpen(key, open) {\n    var nextOpen = open !== null && open !== void 0 ? open : !mergedOpenKeys.includes(key);\n    onInternalOpenChange(key, nextOpen);\n  };\n\n  var onInternalKeyDown = useAccessibility(mergedMode, mergedActiveKey, isRtl, uuid, containerRef, getKeys, getKeyPath, setMergedActiveKey, triggerAccessibilityOpen, onKeyDown); // ======================== Effect ========================\n\n  React.useEffect(function () {\n    setMounted(true);\n  }, []); // ======================= Context ========================\n\n  var privateContext = React.useMemo(function () {\n    return {\n      _internalRenderMenuItem: _internalRenderMenuItem,\n      _internalRenderSubMenuItem: _internalRenderSubMenuItem\n    };\n  }, [_internalRenderMenuItem, _internalRenderSubMenuItem]); // ======================== Render ========================\n  // >>>>> Children\n\n  var wrappedChildList = mergedMode !== 'horizontal' || disabledOverflow ? childList : // Need wrap for overflow dropdown that do not response for open\n  childList.map(function (child, index) {\n    return (\n      /*#__PURE__*/\n      // Always wrap provider to avoid sub node re-mount\n      React.createElement(MenuContextProvider, {\n        key: child.key,\n        overflowDisabled: index > lastVisibleIndex\n      }, child)\n    );\n  }); // >>>>> Container\n\n  var container = /*#__PURE__*/React.createElement(Overflow, _extends({\n    id: id,\n    ref: containerRef,\n    prefixCls: \"\".concat(prefixCls, \"-overflow\"),\n    component: \"ul\",\n    itemComponent: MenuItem,\n    className: classNames(prefixCls, \"\".concat(prefixCls, \"-root\"), \"\".concat(prefixCls, \"-\").concat(mergedMode), className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-inline-collapsed\"), mergedInlineCollapsed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), isRtl), _classNames), rootClassName),\n    dir: direction,\n    style: style,\n    role: \"menu\",\n    tabIndex: tabIndex,\n    data: wrappedChildList,\n    renderRawItem: function renderRawItem(node) {\n      return node;\n    },\n    renderRawRest: function renderRawRest(omitItems) {\n      // We use origin list since wrapped list use context to prevent open\n      var len = omitItems.length;\n      var originOmitItems = len ? childList.slice(-len) : null;\n      return /*#__PURE__*/React.createElement(SubMenu, {\n        eventKey: OVERFLOW_KEY,\n        title: overflowedIndicator,\n        disabled: allVisible,\n        internalPopupClose: len === 0,\n        popupClassName: overflowedIndicatorPopupClassName\n      }, originOmitItems);\n    },\n    maxCount: mergedMode !== 'horizontal' || disabledOverflow ? Overflow.INVALIDATE : Overflow.RESPONSIVE,\n    ssr: \"full\",\n    \"data-menu-list\": true,\n    onVisibleChange: function onVisibleChange(newLastIndex) {\n      setLastVisibleIndex(newLastIndex);\n    },\n    onKeyDown: onInternalKeyDown\n  }, restProps)); // >>>>> Render\n\n  return /*#__PURE__*/React.createElement(PrivateContext.Provider, {\n    value: privateContext\n  }, /*#__PURE__*/React.createElement(IdContext.Provider, {\n    value: uuid\n  }, /*#__PURE__*/React.createElement(MenuContextProvider, {\n    prefixCls: prefixCls,\n    rootClassName: rootClassName,\n    mode: mergedMode,\n    openKeys: mergedOpenKeys,\n    rtl: isRtl // Disabled\n    ,\n    disabled: disabled // Motion\n    ,\n    motion: mounted ? motion : null,\n    defaultMotions: mounted ? defaultMotions : null // Active\n    ,\n    activeKey: mergedActiveKey,\n    onActive: onActive,\n    onInactive: onInactive // Selection\n    ,\n    selectedKeys: mergedSelectKeys // Level\n    ,\n    inlineIndent: inlineIndent // Popup\n    ,\n    subMenuOpenDelay: subMenuOpenDelay,\n    subMenuCloseDelay: subMenuCloseDelay,\n    forceSubMenuRender: forceSubMenuRender,\n    builtinPlacements: builtinPlacements,\n    triggerSubMenuAction: triggerSubMenuAction,\n    getPopupContainer: getInternalPopupContainer // Icon\n    ,\n    itemIcon: itemIcon,\n    expandIcon: expandIcon // Events\n    ,\n    onItemClick: onInternalClick,\n    onOpenChange: onInternalOpenChange\n  }, /*#__PURE__*/React.createElement(PathUserContext.Provider, {\n    value: pathUserContext\n  }, container), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none'\n    },\n    \"aria-hidden\": true\n  }, /*#__PURE__*/React.createElement(PathRegisterContext.Provider, {\n    value: registerPathContext\n  }, childList)))));\n});\nexport default Menu;","map":{"version":3,"sources":["C:/Users/czy/Desktop/wine/node_modules/rc-menu/es/Menu.js"],"names":["_extends","_defineProperty","_objectSpread","_toConsumableArray","_slicedToArray","_objectWithoutProperties","_excluded","React","classNames","shallowEqual","useMergedState","warning","Overflow","MenuItem","parseItems","MenuContextProvider","useMemoCallback","warnItemProp","SubMenu","useAccessibility","useUUID","PathRegisterContext","PathUserContext","useKeyRecords","OVERFLOW_KEY","getMenuId","IdContext","PrivateContext","useImperativeHandle","EMPTY_LIST","Menu","forwardRef","props","ref","_childList$","_classNames","_props$prefixCls","prefixCls","rootClassName","style","className","_props$tabIndex","tabIndex","items","children","direction","id","_props$mode","mode","inlineCollapsed","disabled","disabledOverflow","_props$subMenuOpenDel","subMenuOpenDelay","_props$subMenuCloseDe","subMenuCloseDelay","forceSubMenuRender","defaultOpenKeys","openKeys","activeKey","defaultActiveFirst","_props$selectable","selectable","_props$multiple","multiple","defaultSelectedKeys","selectedKeys","onSelect","onDeselect","_props$inlineIndent","inlineIndent","motion","defaultMotions","_props$triggerSubMenu","triggerSubMenuAction","builtinPlacements","itemIcon","expandIcon","_props$overflowedIndi","overflowedIndicator","overflowedIndicatorPopupClassName","getPopupContainer","onClick","onOpenChange","onKeyDown","openAnimation","openTransitionName","_internalRenderMenuItem","_internalRenderSubMenuItem","restProps","childList","useMemo","_React$useState","useState","_React$useState2","mounted","setMounted","containerRef","useRef","uuid","isRtl","process","env","NODE_ENV","_React$useMemo","_React$useMemo2","mergedMode","mergedInlineCollapsed","_React$useState3","_React$useState4","lastVisibleIndex","setLastVisibleIndex","allVisible","length","_useMergedState","value","postState","keys","_useMergedState2","mergedOpenKeys","setMergedOpenKeys","triggerOpenKeys","_React$useState5","_React$useState6","inlineCacheOpenKeys","setInlineCacheOpenKeys","isInlineMode","mountRef","useEffect","current","_useKeyRecords","registerPath","unregisterPath","refreshOverflowKeys","isSubPathKey","getKeyPath","getKeys","getSubPathKeys","registerPathContext","pathUserContext","slice","map","child","key","_useMergedState3","_useMergedState4","mergedActiveKey","setMergedActiveKey","onActive","onInactive","undefined","list","focus","options","_childList$find","shouldFocusKey","find","node","_containerRef$current","_containerRef$current2","_containerRef$current3","querySelector","concat","call","_useMergedState5","Array","isArray","_useMergedState6","mergedSelectKeys","setMergedSelectKeys","triggerSelection","info","targetKey","exist","includes","newSelectKeys","filter","selectInfo","onInternalClick","onInternalOpenChange","open","newOpenKeys","k","push","subPathKeys","has","getInternalPopupContainer","triggerAccessibilityOpen","nextOpen","onInternalKeyDown","privateContext","wrappedChildList","index","createElement","overflowDisabled","container","component","itemComponent","dir","role","data","renderRawItem","renderRawRest","omitItems","len","originOmitItems","eventKey","title","internalPopupClose","popupClassName","maxCount","INVALIDATE","RESPONSIVE","ssr","onVisibleChange","newLastIndex","Provider","rtl","onItemClick","display"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"rootClassName\", \"style\", \"className\", \"tabIndex\", \"items\", \"children\", \"direction\", \"id\", \"mode\", \"inlineCollapsed\", \"disabled\", \"disabledOverflow\", \"subMenuOpenDelay\", \"subMenuCloseDelay\", \"forceSubMenuRender\", \"defaultOpenKeys\", \"openKeys\", \"activeKey\", \"defaultActiveFirst\", \"selectable\", \"multiple\", \"defaultSelectedKeys\", \"selectedKeys\", \"onSelect\", \"onDeselect\", \"inlineIndent\", \"motion\", \"defaultMotions\", \"triggerSubMenuAction\", \"builtinPlacements\", \"itemIcon\", \"expandIcon\", \"overflowedIndicator\", \"overflowedIndicatorPopupClassName\", \"getPopupContainer\", \"onClick\", \"onOpenChange\", \"onKeyDown\", \"openAnimation\", \"openTransitionName\", \"_internalRenderMenuItem\", \"_internalRenderSubMenuItem\"];\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport shallowEqual from 'shallowequal';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport warning from \"rc-util/es/warning\";\nimport Overflow from 'rc-overflow';\nimport MenuItem from './MenuItem';\nimport { parseItems } from './utils/nodeUtil';\nimport MenuContextProvider from './context/MenuContext';\nimport useMemoCallback from './hooks/useMemoCallback';\nimport { warnItemProp } from './utils/warnUtil';\nimport SubMenu from './SubMenu';\nimport useAccessibility from './hooks/useAccessibility';\nimport useUUID from './hooks/useUUID';\nimport { PathRegisterContext, PathUserContext } from './context/PathContext';\nimport useKeyRecords, { OVERFLOW_KEY } from './hooks/useKeyRecords';\nimport { getMenuId, IdContext } from './context/IdContext';\nimport PrivateContext from './context/PrivateContext';\nimport { useImperativeHandle } from 'react';\n/**\n * Menu modify after refactor:\n * ## Add\n * - disabled\n *\n * ## Remove\n * - openTransitionName\n * - openAnimation\n * - onDestroy\n * - siderCollapsed: Seems antd do not use this prop (Need test in antd)\n * - collapsedWidth: Seems this logic should be handle by antd Layout.Sider\n */\n// optimize for render\n\nvar EMPTY_LIST = [];\nvar Menu = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _childList$, _classNames;\n\n  var _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? 'rc-menu' : _props$prefixCls,\n      rootClassName = props.rootClassName,\n      style = props.style,\n      className = props.className,\n      _props$tabIndex = props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n      items = props.items,\n      children = props.children,\n      direction = props.direction,\n      id = props.id,\n      _props$mode = props.mode,\n      mode = _props$mode === void 0 ? 'vertical' : _props$mode,\n      inlineCollapsed = props.inlineCollapsed,\n      disabled = props.disabled,\n      disabledOverflow = props.disabledOverflow,\n      _props$subMenuOpenDel = props.subMenuOpenDelay,\n      subMenuOpenDelay = _props$subMenuOpenDel === void 0 ? 0.1 : _props$subMenuOpenDel,\n      _props$subMenuCloseDe = props.subMenuCloseDelay,\n      subMenuCloseDelay = _props$subMenuCloseDe === void 0 ? 0.1 : _props$subMenuCloseDe,\n      forceSubMenuRender = props.forceSubMenuRender,\n      defaultOpenKeys = props.defaultOpenKeys,\n      openKeys = props.openKeys,\n      activeKey = props.activeKey,\n      defaultActiveFirst = props.defaultActiveFirst,\n      _props$selectable = props.selectable,\n      selectable = _props$selectable === void 0 ? true : _props$selectable,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      defaultSelectedKeys = props.defaultSelectedKeys,\n      selectedKeys = props.selectedKeys,\n      onSelect = props.onSelect,\n      onDeselect = props.onDeselect,\n      _props$inlineIndent = props.inlineIndent,\n      inlineIndent = _props$inlineIndent === void 0 ? 24 : _props$inlineIndent,\n      motion = props.motion,\n      defaultMotions = props.defaultMotions,\n      _props$triggerSubMenu = props.triggerSubMenuAction,\n      triggerSubMenuAction = _props$triggerSubMenu === void 0 ? 'hover' : _props$triggerSubMenu,\n      builtinPlacements = props.builtinPlacements,\n      itemIcon = props.itemIcon,\n      expandIcon = props.expandIcon,\n      _props$overflowedIndi = props.overflowedIndicator,\n      overflowedIndicator = _props$overflowedIndi === void 0 ? '...' : _props$overflowedIndi,\n      overflowedIndicatorPopupClassName = props.overflowedIndicatorPopupClassName,\n      getPopupContainer = props.getPopupContainer,\n      onClick = props.onClick,\n      onOpenChange = props.onOpenChange,\n      onKeyDown = props.onKeyDown,\n      openAnimation = props.openAnimation,\n      openTransitionName = props.openTransitionName,\n      _internalRenderMenuItem = props._internalRenderMenuItem,\n      _internalRenderSubMenuItem = props._internalRenderSubMenuItem,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var childList = React.useMemo(function () {\n    return parseItems(children, items, EMPTY_LIST);\n  }, [children, items]);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mounted = _React$useState2[0],\n      setMounted = _React$useState2[1];\n\n  var containerRef = React.useRef();\n  var uuid = useUUID(id);\n  var isRtl = direction === 'rtl'; // ========================= Warn =========================\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(!openAnimation && !openTransitionName, '`openAnimation` and `openTransitionName` is removed. Please use `motion` or `defaultMotion` instead.');\n  } // ========================= Mode =========================\n\n\n  var _React$useMemo = React.useMemo(function () {\n    if ((mode === 'inline' || mode === 'vertical') && inlineCollapsed) {\n      return ['vertical', inlineCollapsed];\n    }\n\n    return [mode, false];\n  }, [mode, inlineCollapsed]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      mergedMode = _React$useMemo2[0],\n      mergedInlineCollapsed = _React$useMemo2[1]; // ====================== Responsive ======================\n\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      lastVisibleIndex = _React$useState4[0],\n      setLastVisibleIndex = _React$useState4[1];\n\n  var allVisible = lastVisibleIndex >= childList.length - 1 || mergedMode !== 'horizontal' || disabledOverflow; // ========================= Open =========================\n\n  var _useMergedState = useMergedState(defaultOpenKeys, {\n    value: openKeys,\n    postState: function postState(keys) {\n      return keys || EMPTY_LIST;\n    }\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedOpenKeys = _useMergedState2[0],\n      setMergedOpenKeys = _useMergedState2[1];\n\n  var triggerOpenKeys = function triggerOpenKeys(keys) {\n    setMergedOpenKeys(keys);\n    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(keys);\n  }; // >>>>> Cache & Reset open keys when inlineCollapsed changed\n\n\n  var _React$useState5 = React.useState(mergedOpenKeys),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      inlineCacheOpenKeys = _React$useState6[0],\n      setInlineCacheOpenKeys = _React$useState6[1];\n\n  var isInlineMode = mergedMode === 'inline';\n  var mountRef = React.useRef(false); // Cache\n\n  React.useEffect(function () {\n    if (isInlineMode) {\n      setInlineCacheOpenKeys(mergedOpenKeys);\n    }\n  }, [mergedOpenKeys]); // Restore\n\n  React.useEffect(function () {\n    if (!mountRef.current) {\n      mountRef.current = true;\n      return;\n    }\n\n    if (isInlineMode) {\n      setMergedOpenKeys(inlineCacheOpenKeys);\n    } else {\n      // Trigger open event in case its in control\n      triggerOpenKeys(EMPTY_LIST);\n    }\n  }, [isInlineMode]); // ========================= Path =========================\n\n  var _useKeyRecords = useKeyRecords(),\n      registerPath = _useKeyRecords.registerPath,\n      unregisterPath = _useKeyRecords.unregisterPath,\n      refreshOverflowKeys = _useKeyRecords.refreshOverflowKeys,\n      isSubPathKey = _useKeyRecords.isSubPathKey,\n      getKeyPath = _useKeyRecords.getKeyPath,\n      getKeys = _useKeyRecords.getKeys,\n      getSubPathKeys = _useKeyRecords.getSubPathKeys;\n\n  var registerPathContext = React.useMemo(function () {\n    return {\n      registerPath: registerPath,\n      unregisterPath: unregisterPath\n    };\n  }, [registerPath, unregisterPath]);\n  var pathUserContext = React.useMemo(function () {\n    return {\n      isSubPathKey: isSubPathKey\n    };\n  }, [isSubPathKey]);\n  React.useEffect(function () {\n    refreshOverflowKeys(allVisible ? EMPTY_LIST : childList.slice(lastVisibleIndex + 1).map(function (child) {\n      return child.key;\n    }));\n  }, [lastVisibleIndex, allVisible]); // ======================== Active ========================\n\n  var _useMergedState3 = useMergedState(activeKey || defaultActiveFirst && ((_childList$ = childList[0]) === null || _childList$ === void 0 ? void 0 : _childList$.key), {\n    value: activeKey\n  }),\n      _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n      mergedActiveKey = _useMergedState4[0],\n      setMergedActiveKey = _useMergedState4[1];\n\n  var onActive = useMemoCallback(function (key) {\n    setMergedActiveKey(key);\n  });\n  var onInactive = useMemoCallback(function () {\n    setMergedActiveKey(undefined);\n  });\n  useImperativeHandle(ref, function () {\n    return {\n      list: containerRef.current,\n      focus: function focus(options) {\n        var _childList$find;\n\n        var shouldFocusKey = mergedActiveKey !== null && mergedActiveKey !== void 0 ? mergedActiveKey : (_childList$find = childList.find(function (node) {\n          return !node.props.disabled;\n        })) === null || _childList$find === void 0 ? void 0 : _childList$find.key;\n\n        if (shouldFocusKey) {\n          var _containerRef$current, _containerRef$current2, _containerRef$current3;\n\n          (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : (_containerRef$current2 = _containerRef$current.querySelector(\"li[data-menu-id='\".concat(getMenuId(uuid, shouldFocusKey), \"']\"))) === null || _containerRef$current2 === void 0 ? void 0 : (_containerRef$current3 = _containerRef$current2.focus) === null || _containerRef$current3 === void 0 ? void 0 : _containerRef$current3.call(_containerRef$current2, options);\n        }\n      }\n    };\n  }); // ======================== Select ========================\n  // >>>>> Select keys\n\n  var _useMergedState5 = useMergedState(defaultSelectedKeys || [], {\n    value: selectedKeys,\n    // Legacy convert key to array\n    postState: function postState(keys) {\n      if (Array.isArray(keys)) {\n        return keys;\n      }\n\n      if (keys === null || keys === undefined) {\n        return EMPTY_LIST;\n      }\n\n      return [keys];\n    }\n  }),\n      _useMergedState6 = _slicedToArray(_useMergedState5, 2),\n      mergedSelectKeys = _useMergedState6[0],\n      setMergedSelectKeys = _useMergedState6[1]; // >>>>> Trigger select\n\n\n  var triggerSelection = function triggerSelection(info) {\n    if (selectable) {\n      // Insert or Remove\n      var targetKey = info.key;\n      var exist = mergedSelectKeys.includes(targetKey);\n      var newSelectKeys;\n\n      if (multiple) {\n        if (exist) {\n          newSelectKeys = mergedSelectKeys.filter(function (key) {\n            return key !== targetKey;\n          });\n        } else {\n          newSelectKeys = [].concat(_toConsumableArray(mergedSelectKeys), [targetKey]);\n        }\n      } else {\n        newSelectKeys = [targetKey];\n      }\n\n      setMergedSelectKeys(newSelectKeys); // Trigger event\n\n      var selectInfo = _objectSpread(_objectSpread({}, info), {}, {\n        selectedKeys: newSelectKeys\n      });\n\n      if (exist) {\n        onDeselect === null || onDeselect === void 0 ? void 0 : onDeselect(selectInfo);\n      } else {\n        onSelect === null || onSelect === void 0 ? void 0 : onSelect(selectInfo);\n      }\n    } // Whatever selectable, always close it\n\n\n    if (!multiple && mergedOpenKeys.length && mergedMode !== 'inline') {\n      triggerOpenKeys(EMPTY_LIST);\n    }\n  }; // ========================= Open =========================\n\n  /**\n   * Click for item. SubMenu do not have selection status\n   */\n\n\n  var onInternalClick = useMemoCallback(function (info) {\n    onClick === null || onClick === void 0 ? void 0 : onClick(warnItemProp(info));\n    triggerSelection(info);\n  });\n  var onInternalOpenChange = useMemoCallback(function (key, open) {\n    var newOpenKeys = mergedOpenKeys.filter(function (k) {\n      return k !== key;\n    });\n\n    if (open) {\n      newOpenKeys.push(key);\n    } else if (mergedMode !== 'inline') {\n      // We need find all related popup to close\n      var subPathKeys = getSubPathKeys(key);\n      newOpenKeys = newOpenKeys.filter(function (k) {\n        return !subPathKeys.has(k);\n      });\n    }\n\n    if (!shallowEqual(mergedOpenKeys, newOpenKeys)) {\n      triggerOpenKeys(newOpenKeys);\n    }\n  });\n  var getInternalPopupContainer = useMemoCallback(getPopupContainer); // ==================== Accessibility =====================\n\n  var triggerAccessibilityOpen = function triggerAccessibilityOpen(key, open) {\n    var nextOpen = open !== null && open !== void 0 ? open : !mergedOpenKeys.includes(key);\n    onInternalOpenChange(key, nextOpen);\n  };\n\n  var onInternalKeyDown = useAccessibility(mergedMode, mergedActiveKey, isRtl, uuid, containerRef, getKeys, getKeyPath, setMergedActiveKey, triggerAccessibilityOpen, onKeyDown); // ======================== Effect ========================\n\n  React.useEffect(function () {\n    setMounted(true);\n  }, []); // ======================= Context ========================\n\n  var privateContext = React.useMemo(function () {\n    return {\n      _internalRenderMenuItem: _internalRenderMenuItem,\n      _internalRenderSubMenuItem: _internalRenderSubMenuItem\n    };\n  }, [_internalRenderMenuItem, _internalRenderSubMenuItem]); // ======================== Render ========================\n  // >>>>> Children\n\n  var wrappedChildList = mergedMode !== 'horizontal' || disabledOverflow ? childList : // Need wrap for overflow dropdown that do not response for open\n  childList.map(function (child, index) {\n    return (\n      /*#__PURE__*/\n      // Always wrap provider to avoid sub node re-mount\n      React.createElement(MenuContextProvider, {\n        key: child.key,\n        overflowDisabled: index > lastVisibleIndex\n      }, child)\n    );\n  }); // >>>>> Container\n\n  var container = /*#__PURE__*/React.createElement(Overflow, _extends({\n    id: id,\n    ref: containerRef,\n    prefixCls: \"\".concat(prefixCls, \"-overflow\"),\n    component: \"ul\",\n    itemComponent: MenuItem,\n    className: classNames(prefixCls, \"\".concat(prefixCls, \"-root\"), \"\".concat(prefixCls, \"-\").concat(mergedMode), className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-inline-collapsed\"), mergedInlineCollapsed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), isRtl), _classNames), rootClassName),\n    dir: direction,\n    style: style,\n    role: \"menu\",\n    tabIndex: tabIndex,\n    data: wrappedChildList,\n    renderRawItem: function renderRawItem(node) {\n      return node;\n    },\n    renderRawRest: function renderRawRest(omitItems) {\n      // We use origin list since wrapped list use context to prevent open\n      var len = omitItems.length;\n      var originOmitItems = len ? childList.slice(-len) : null;\n      return /*#__PURE__*/React.createElement(SubMenu, {\n        eventKey: OVERFLOW_KEY,\n        title: overflowedIndicator,\n        disabled: allVisible,\n        internalPopupClose: len === 0,\n        popupClassName: overflowedIndicatorPopupClassName\n      }, originOmitItems);\n    },\n    maxCount: mergedMode !== 'horizontal' || disabledOverflow ? Overflow.INVALIDATE : Overflow.RESPONSIVE,\n    ssr: \"full\",\n    \"data-menu-list\": true,\n    onVisibleChange: function onVisibleChange(newLastIndex) {\n      setLastVisibleIndex(newLastIndex);\n    },\n    onKeyDown: onInternalKeyDown\n  }, restProps)); // >>>>> Render\n\n  return /*#__PURE__*/React.createElement(PrivateContext.Provider, {\n    value: privateContext\n  }, /*#__PURE__*/React.createElement(IdContext.Provider, {\n    value: uuid\n  }, /*#__PURE__*/React.createElement(MenuContextProvider, {\n    prefixCls: prefixCls,\n    rootClassName: rootClassName,\n    mode: mergedMode,\n    openKeys: mergedOpenKeys,\n    rtl: isRtl // Disabled\n    ,\n    disabled: disabled // Motion\n    ,\n    motion: mounted ? motion : null,\n    defaultMotions: mounted ? defaultMotions : null // Active\n    ,\n    activeKey: mergedActiveKey,\n    onActive: onActive,\n    onInactive: onInactive // Selection\n    ,\n    selectedKeys: mergedSelectKeys // Level\n    ,\n    inlineIndent: inlineIndent // Popup\n    ,\n    subMenuOpenDelay: subMenuOpenDelay,\n    subMenuCloseDelay: subMenuCloseDelay,\n    forceSubMenuRender: forceSubMenuRender,\n    builtinPlacements: builtinPlacements,\n    triggerSubMenuAction: triggerSubMenuAction,\n    getPopupContainer: getInternalPopupContainer // Icon\n    ,\n    itemIcon: itemIcon,\n    expandIcon: expandIcon // Events\n    ,\n    onItemClick: onInternalClick,\n    onOpenChange: onInternalOpenChange\n  }, /*#__PURE__*/React.createElement(PathUserContext.Provider, {\n    value: pathUserContext\n  }, container), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none'\n    },\n    \"aria-hidden\": true\n  }, /*#__PURE__*/React.createElement(PathRegisterContext.Provider, {\n    value: registerPathContext\n  }, childList)))));\n});\nexport default Menu;"]},"metadata":{},"sourceType":"module"}