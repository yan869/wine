{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nvar _excluded = [\"name\", \"errors\"];\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport { HOOK_MARK } from './FieldContext';\nimport { allPromiseFinish } from './utils/asyncUtil';\nimport cloneDeep from './utils/cloneDeep';\nimport { defaultValidateMessages } from './utils/messages';\nimport NameMap from './utils/NameMap';\nimport { cloneByNamePathList, containsNamePath, getNamePath, getValue, matchNamePath, setValue, setValues } from './utils/valueUtil';\nexport var FormStore = /*#__PURE__*/_createClass(function FormStore(forceRootUpdate) {\n  var _this = this;\n\n  _classCallCheck(this, FormStore);\n\n  this.formHooked = false;\n  this.forceRootUpdate = void 0;\n  this.subscribable = true;\n  this.store = {};\n  this.fieldEntities = [];\n  this.initialValues = {};\n  this.callbacks = {};\n  this.validateMessages = null;\n  this.preserve = null;\n  this.lastValidatePromise = null;\n\n  this.getForm = function () {\n    return {\n      getFieldValue: _this.getFieldValue,\n      getFieldsValue: _this.getFieldsValue,\n      getFieldError: _this.getFieldError,\n      getFieldWarning: _this.getFieldWarning,\n      getFieldsError: _this.getFieldsError,\n      isFieldsTouched: _this.isFieldsTouched,\n      isFieldTouched: _this.isFieldTouched,\n      isFieldValidating: _this.isFieldValidating,\n      isFieldsValidating: _this.isFieldsValidating,\n      resetFields: _this.resetFields,\n      setFields: _this.setFields,\n      setFieldsValue: _this.setFieldsValue,\n      validateFields: _this.validateFields,\n      submit: _this.submit,\n      _init: true,\n      getInternalHooks: _this.getInternalHooks\n    };\n  };\n\n  this.getInternalHooks = function (key) {\n    if (key === HOOK_MARK) {\n      _this.formHooked = true;\n      return {\n        dispatch: _this.dispatch,\n        initEntityValue: _this.initEntityValue,\n        registerField: _this.registerField,\n        useSubscribe: _this.useSubscribe,\n        setInitialValues: _this.setInitialValues,\n        destroyForm: _this.destroyForm,\n        setCallbacks: _this.setCallbacks,\n        setValidateMessages: _this.setValidateMessages,\n        getFields: _this.getFields,\n        setPreserve: _this.setPreserve,\n        getInitialValue: _this.getInitialValue,\n        registerWatch: _this.registerWatch\n      };\n    }\n\n    warning(false, '`getInternalHooks` is internal usage. Should not call directly.');\n    return null;\n  };\n\n  this.useSubscribe = function (subscribable) {\n    _this.subscribable = subscribable;\n  };\n\n  this.prevWithoutPreserves = null;\n\n  this.setInitialValues = function (initialValues, init) {\n    _this.initialValues = initialValues || {};\n\n    if (init) {\n      var _this$prevWithoutPres;\n\n      var nextStore = setValues({}, initialValues, _this.store); // We will take consider prev form unmount fields.\n      // When the field is not `preserve`, we need fill this with initialValues instead of store.\n      // eslint-disable-next-line array-callback-return\n\n      (_this$prevWithoutPres = _this.prevWithoutPreserves) === null || _this$prevWithoutPres === void 0 ? void 0 : _this$prevWithoutPres.map(function (_ref) {\n        var namePath = _ref.key;\n        nextStore = setValue(nextStore, namePath, getValue(initialValues, namePath));\n      });\n      _this.prevWithoutPreserves = null;\n\n      _this.updateStore(nextStore);\n    }\n  };\n\n  this.destroyForm = function () {\n    var prevWithoutPreserves = new NameMap();\n\n    _this.getFieldEntities(true).forEach(function (entity) {\n      if (!_this.isMergedPreserve(entity.isPreserve())) {\n        prevWithoutPreserves.set(entity.getNamePath(), true);\n      }\n    });\n\n    _this.prevWithoutPreserves = prevWithoutPreserves;\n  };\n\n  this.getInitialValue = function (namePath) {\n    var initValue = getValue(_this.initialValues, namePath); // Not cloneDeep when without `namePath`\n\n    return namePath.length ? cloneDeep(initValue) : initValue;\n  };\n\n  this.setCallbacks = function (callbacks) {\n    _this.callbacks = callbacks;\n  };\n\n  this.setValidateMessages = function (validateMessages) {\n    _this.validateMessages = validateMessages;\n  };\n\n  this.setPreserve = function (preserve) {\n    _this.preserve = preserve;\n  };\n\n  this.watchList = [];\n\n  this.registerWatch = function (callback) {\n    _this.watchList.push(callback);\n\n    return function () {\n      _this.watchList = _this.watchList.filter(function (fn) {\n        return fn !== callback;\n      });\n    };\n  };\n\n  this.notifyWatch = function () {\n    var namePath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : []; // No need to cost perf when nothing need to watch\n\n    if (_this.watchList.length) {\n      var values = _this.getFieldsValue();\n\n      _this.watchList.forEach(function (callback) {\n        callback(values, namePath);\n      });\n    }\n  };\n\n  this.timeoutId = null;\n\n  this.warningUnhooked = function () {\n    if (process.env.NODE_ENV !== 'production' && !_this.timeoutId && typeof window !== 'undefined') {\n      _this.timeoutId = setTimeout(function () {\n        _this.timeoutId = null;\n\n        if (!_this.formHooked) {\n          warning(false, 'Instance created by `useForm` is not connected to any Form element. Forget to pass `form` prop?');\n        }\n      });\n    }\n  };\n\n  this.updateStore = function (nextStore) {\n    _this.store = nextStore;\n  };\n\n  this.getFieldEntities = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (!pure) {\n      return _this.fieldEntities;\n    }\n\n    return _this.fieldEntities.filter(function (field) {\n      return field.getNamePath().length;\n    });\n  };\n\n  this.getFieldsMap = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var cache = new NameMap();\n\n    _this.getFieldEntities(pure).forEach(function (field) {\n      var namePath = field.getNamePath();\n      cache.set(namePath, field);\n    });\n\n    return cache;\n  };\n\n  this.getFieldEntitiesForNamePathList = function (nameList) {\n    if (!nameList) {\n      return _this.getFieldEntities(true);\n    }\n\n    var cache = _this.getFieldsMap(true);\n\n    return nameList.map(function (name) {\n      var namePath = getNamePath(name);\n      return cache.get(namePath) || {\n        INVALIDATE_NAME_PATH: getNamePath(name)\n      };\n    });\n  };\n\n  this.getFieldsValue = function (nameList, filterFunc) {\n    _this.warningUnhooked();\n\n    if (nameList === true && !filterFunc) {\n      return _this.store;\n    }\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(Array.isArray(nameList) ? nameList : null);\n\n    var filteredNameList = [];\n    fieldEntities.forEach(function (entity) {\n      var _entity$isListField;\n\n      var namePath = 'INVALIDATE_NAME_PATH' in entity ? entity.INVALIDATE_NAME_PATH : entity.getNamePath(); // Ignore when it's a list item and not specific the namePath,\n      // since parent field is already take in count\n\n      if (!nameList && ((_entity$isListField = entity.isListField) === null || _entity$isListField === void 0 ? void 0 : _entity$isListField.call(entity))) {\n        return;\n      }\n\n      if (!filterFunc) {\n        filteredNameList.push(namePath);\n      } else {\n        var meta = 'getMeta' in entity ? entity.getMeta() : null;\n\n        if (filterFunc(meta)) {\n          filteredNameList.push(namePath);\n        }\n      }\n    });\n    return cloneByNamePathList(_this.store, filteredNameList.map(getNamePath));\n  };\n\n  this.getFieldValue = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n    return getValue(_this.store, namePath);\n  };\n\n  this.getFieldsError = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(nameList);\n\n    return fieldEntities.map(function (entity, index) {\n      if (entity && !('INVALIDATE_NAME_PATH' in entity)) {\n        return {\n          name: entity.getNamePath(),\n          errors: entity.getErrors(),\n          warnings: entity.getWarnings()\n        };\n      }\n\n      return {\n        name: getNamePath(nameList[index]),\n        errors: [],\n        warnings: []\n      };\n    });\n  };\n\n  this.getFieldError = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.errors;\n  };\n\n  this.getFieldWarning = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.warnings;\n  };\n\n  this.isFieldsTouched = function () {\n    _this.warningUnhooked();\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var arg0 = args[0],\n        arg1 = args[1];\n    var namePathList;\n    var isAllFieldsTouched = false;\n\n    if (args.length === 0) {\n      namePathList = null;\n    } else if (args.length === 1) {\n      if (Array.isArray(arg0)) {\n        namePathList = arg0.map(getNamePath);\n        isAllFieldsTouched = false;\n      } else {\n        namePathList = null;\n        isAllFieldsTouched = arg0;\n      }\n    } else {\n      namePathList = arg0.map(getNamePath);\n      isAllFieldsTouched = arg1;\n    }\n\n    var fieldEntities = _this.getFieldEntities(true);\n\n    var isFieldTouched = function isFieldTouched(field) {\n      return field.isFieldTouched();\n    }; // ===== Will get fully compare when not config namePathList =====\n\n\n    if (!namePathList) {\n      return isAllFieldsTouched ? fieldEntities.every(isFieldTouched) : fieldEntities.some(isFieldTouched);\n    } // Generate a nest tree for validate\n\n\n    var map = new NameMap();\n    namePathList.forEach(function (shortNamePath) {\n      map.set(shortNamePath, []);\n    });\n    fieldEntities.forEach(function (field) {\n      var fieldNamePath = field.getNamePath(); // Find matched entity and put into list\n\n      namePathList.forEach(function (shortNamePath) {\n        if (shortNamePath.every(function (nameUnit, i) {\n          return fieldNamePath[i] === nameUnit;\n        })) {\n          map.update(shortNamePath, function (list) {\n            return [].concat(_toConsumableArray(list), [field]);\n          });\n        }\n      });\n    }); // Check if NameMap value is touched\n\n    var isNamePathListTouched = function isNamePathListTouched(entities) {\n      return entities.some(isFieldTouched);\n    };\n\n    var namePathListEntities = map.map(function (_ref2) {\n      var value = _ref2.value;\n      return value;\n    });\n    return isAllFieldsTouched ? namePathListEntities.every(isNamePathListTouched) : namePathListEntities.some(isNamePathListTouched);\n  };\n\n  this.isFieldTouched = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsTouched([name]);\n  };\n\n  this.isFieldsValidating = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntities();\n\n    if (!nameList) {\n      return fieldEntities.some(function (testField) {\n        return testField.isFieldValidating();\n      });\n    }\n\n    var namePathList = nameList.map(getNamePath);\n    return fieldEntities.some(function (testField) {\n      var fieldNamePath = testField.getNamePath();\n      return containsNamePath(namePathList, fieldNamePath) && testField.isFieldValidating();\n    });\n  };\n\n  this.isFieldValidating = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsValidating([name]);\n  };\n\n  this.resetWithFieldInitialValue = function () {\n    var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // Create cache\n\n    var cache = new NameMap();\n\n    var fieldEntities = _this.getFieldEntities(true);\n\n    fieldEntities.forEach(function (field) {\n      var initialValue = field.props.initialValue;\n      var namePath = field.getNamePath(); // Record only if has `initialValue`\n\n      if (initialValue !== undefined) {\n        var records = cache.get(namePath) || new Set();\n        records.add({\n          entity: field,\n          value: initialValue\n        });\n        cache.set(namePath, records);\n      }\n    }); // Reset\n\n    var resetWithFields = function resetWithFields(entities) {\n      entities.forEach(function (field) {\n        var initialValue = field.props.initialValue;\n\n        if (initialValue !== undefined) {\n          var namePath = field.getNamePath();\n\n          var formInitialValue = _this.getInitialValue(namePath);\n\n          if (formInitialValue !== undefined) {\n            // Warning if conflict with form initialValues and do not modify value\n            warning(false, \"Form already set 'initialValues' with path '\".concat(namePath.join('.'), \"'. Field can not overwrite it.\"));\n          } else {\n            var records = cache.get(namePath);\n\n            if (records && records.size > 1) {\n              // Warning if multiple field set `initialValue`and do not modify value\n              warning(false, \"Multiple Field with path '\".concat(namePath.join('.'), \"' set 'initialValue'. Can not decide which one to pick.\"));\n            } else if (records) {\n              var originValue = _this.getFieldValue(namePath); // Set `initialValue`\n\n\n              if (!info.skipExist || originValue === undefined) {\n                _this.updateStore(setValue(_this.store, namePath, _toConsumableArray(records)[0].value));\n              }\n            }\n          }\n        }\n      });\n    };\n\n    var requiredFieldEntities;\n\n    if (info.entities) {\n      requiredFieldEntities = info.entities;\n    } else if (info.namePathList) {\n      requiredFieldEntities = [];\n      info.namePathList.forEach(function (namePath) {\n        var records = cache.get(namePath);\n\n        if (records) {\n          var _requiredFieldEntitie;\n\n          (_requiredFieldEntitie = requiredFieldEntities).push.apply(_requiredFieldEntitie, _toConsumableArray(_toConsumableArray(records).map(function (r) {\n            return r.entity;\n          })));\n        }\n      });\n    } else {\n      requiredFieldEntities = fieldEntities;\n    }\n\n    resetWithFields(requiredFieldEntities);\n  };\n\n  this.resetFields = function (nameList) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (!nameList) {\n      _this.updateStore(setValues({}, _this.initialValues));\n\n      _this.resetWithFieldInitialValue();\n\n      _this.notifyObservers(prevStore, null, {\n        type: 'reset'\n      });\n\n      _this.notifyWatch();\n\n      return;\n    } // Reset by `nameList`\n\n\n    var namePathList = nameList.map(getNamePath);\n    namePathList.forEach(function (namePath) {\n      var initialValue = _this.getInitialValue(namePath);\n\n      _this.updateStore(setValue(_this.store, namePath, initialValue));\n    });\n\n    _this.resetWithFieldInitialValue({\n      namePathList: namePathList\n    });\n\n    _this.notifyObservers(prevStore, namePathList, {\n      type: 'reset'\n    });\n\n    _this.notifyWatch(namePathList);\n  };\n\n  this.setFields = function (fields) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n    var namePathList = [];\n    fields.forEach(function (fieldData) {\n      var name = fieldData.name,\n          errors = fieldData.errors,\n          data = _objectWithoutProperties(fieldData, _excluded);\n\n      var namePath = getNamePath(name);\n      namePathList.push(namePath); // Value\n\n      if ('value' in data) {\n        _this.updateStore(setValue(_this.store, namePath, data.value));\n      }\n\n      _this.notifyObservers(prevStore, [namePath], {\n        type: 'setField',\n        data: fieldData\n      });\n    });\n\n    _this.notifyWatch(namePathList);\n  };\n\n  this.getFields = function () {\n    var entities = _this.getFieldEntities(true);\n\n    var fields = entities.map(function (field) {\n      var namePath = field.getNamePath();\n      var meta = field.getMeta();\n\n      var fieldData = _objectSpread(_objectSpread({}, meta), {}, {\n        name: namePath,\n        value: _this.getFieldValue(namePath)\n      });\n\n      Object.defineProperty(fieldData, 'originRCField', {\n        value: true\n      });\n      return fieldData;\n    });\n    return fields;\n  };\n\n  this.initEntityValue = function (entity) {\n    var initialValue = entity.props.initialValue;\n\n    if (initialValue !== undefined) {\n      var namePath = entity.getNamePath();\n      var prevValue = getValue(_this.store, namePath);\n\n      if (prevValue === undefined) {\n        _this.updateStore(setValue(_this.store, namePath, initialValue));\n      }\n    }\n  };\n\n  this.isMergedPreserve = function (fieldPreserve) {\n    var mergedPreserve = fieldPreserve !== undefined ? fieldPreserve : _this.preserve;\n    return mergedPreserve !== null && mergedPreserve !== void 0 ? mergedPreserve : true;\n  };\n\n  this.registerField = function (entity) {\n    _this.fieldEntities.push(entity);\n\n    var namePath = entity.getNamePath();\n\n    _this.notifyWatch([namePath]); // Set initial values\n\n\n    if (entity.props.initialValue !== undefined) {\n      var prevStore = _this.store;\n\n      _this.resetWithFieldInitialValue({\n        entities: [entity],\n        skipExist: true\n      });\n\n      _this.notifyObservers(prevStore, [entity.getNamePath()], {\n        type: 'valueUpdate',\n        source: 'internal'\n      });\n    } // un-register field callback\n\n\n    return function (isListField, preserve) {\n      var subNamePath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      _this.fieldEntities = _this.fieldEntities.filter(function (item) {\n        return item !== entity;\n      }); // Clean up store value if not preserve\n\n      if (!_this.isMergedPreserve(preserve) && (!isListField || subNamePath.length > 1)) {\n        var defaultValue = isListField ? undefined : _this.getInitialValue(namePath);\n\n        if (namePath.length && _this.getFieldValue(namePath) !== defaultValue && _this.fieldEntities.every(function (field) {\n          return (// Only reset when no namePath exist\n            !matchNamePath(field.getNamePath(), namePath)\n          );\n        })) {\n          var _prevStore = _this.store;\n\n          _this.updateStore(setValue(_prevStore, namePath, defaultValue, true)); // Notify that field is unmount\n\n\n          _this.notifyObservers(_prevStore, [namePath], {\n            type: 'remove'\n          }); // Dependencies update\n\n\n          _this.triggerDependenciesUpdate(_prevStore, namePath);\n        }\n      }\n\n      _this.notifyWatch([namePath]);\n    };\n  };\n\n  this.dispatch = function (action) {\n    switch (action.type) {\n      case 'updateValue':\n        {\n          var namePath = action.namePath,\n              value = action.value;\n\n          _this.updateValue(namePath, value);\n\n          break;\n        }\n\n      case 'validateField':\n        {\n          var _namePath = action.namePath,\n              triggerName = action.triggerName;\n\n          _this.validateFields([_namePath], {\n            triggerName: triggerName\n          });\n\n          break;\n        }\n\n      default: // Currently we don't have other action. Do nothing.\n\n    }\n  };\n\n  this.notifyObservers = function (prevStore, namePathList, info) {\n    if (_this.subscribable) {\n      var mergedInfo = _objectSpread(_objectSpread({}, info), {}, {\n        store: _this.getFieldsValue(true)\n      });\n\n      _this.getFieldEntities().forEach(function (_ref3) {\n        var onStoreChange = _ref3.onStoreChange;\n        onStoreChange(prevStore, namePathList, mergedInfo);\n      });\n    } else {\n      _this.forceRootUpdate();\n    }\n  };\n\n  this.triggerDependenciesUpdate = function (prevStore, namePath) {\n    var childrenFields = _this.getDependencyChildrenFields(namePath);\n\n    if (childrenFields.length) {\n      _this.validateFields(childrenFields);\n    }\n\n    _this.notifyObservers(prevStore, childrenFields, {\n      type: 'dependenciesUpdate',\n      relatedFields: [namePath].concat(_toConsumableArray(childrenFields))\n    });\n\n    return childrenFields;\n  };\n\n  this.updateValue = function (name, value) {\n    var namePath = getNamePath(name);\n    var prevStore = _this.store;\n\n    _this.updateStore(setValue(_this.store, namePath, value));\n\n    _this.notifyObservers(prevStore, [namePath], {\n      type: 'valueUpdate',\n      source: 'internal'\n    });\n\n    _this.notifyWatch([namePath]); // Dependencies update\n\n\n    var childrenFields = _this.triggerDependenciesUpdate(prevStore, namePath); // trigger callback function\n\n\n    var onValuesChange = _this.callbacks.onValuesChange;\n\n    if (onValuesChange) {\n      var changedValues = cloneByNamePathList(_this.store, [namePath]);\n      onValuesChange(changedValues, _this.getFieldsValue());\n    }\n\n    _this.triggerOnFieldsChange([namePath].concat(_toConsumableArray(childrenFields)));\n  };\n\n  this.setFieldsValue = function (store) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (store) {\n      var nextStore = setValues(_this.store, store);\n\n      _this.updateStore(nextStore);\n    }\n\n    _this.notifyObservers(prevStore, null, {\n      type: 'valueUpdate',\n      source: 'external'\n    });\n\n    _this.notifyWatch();\n  };\n\n  this.getDependencyChildrenFields = function (rootNamePath) {\n    var children = new Set();\n    var childrenFields = [];\n    var dependencies2fields = new NameMap();\n    /**\n     * Generate maps\n     * Can use cache to save perf if user report performance issue with this\n     */\n\n    _this.getFieldEntities().forEach(function (field) {\n      var dependencies = field.props.dependencies;\n      (dependencies || []).forEach(function (dependency) {\n        var dependencyNamePath = getNamePath(dependency);\n        dependencies2fields.update(dependencyNamePath, function () {\n          var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Set();\n          fields.add(field);\n          return fields;\n        });\n      });\n    });\n\n    var fillChildren = function fillChildren(namePath) {\n      var fields = dependencies2fields.get(namePath) || new Set();\n      fields.forEach(function (field) {\n        if (!children.has(field)) {\n          children.add(field);\n          var fieldNamePath = field.getNamePath();\n\n          if (field.isFieldDirty() && fieldNamePath.length) {\n            childrenFields.push(fieldNamePath);\n            fillChildren(fieldNamePath);\n          }\n        }\n      });\n    };\n\n    fillChildren(rootNamePath);\n    return childrenFields;\n  };\n\n  this.triggerOnFieldsChange = function (namePathList, filedErrors) {\n    var onFieldsChange = _this.callbacks.onFieldsChange;\n\n    if (onFieldsChange) {\n      var fields = _this.getFields();\n      /**\n       * Fill errors since `fields` may be replaced by controlled fields\n       */\n\n\n      if (filedErrors) {\n        var cache = new NameMap();\n        filedErrors.forEach(function (_ref4) {\n          var name = _ref4.name,\n              errors = _ref4.errors;\n          cache.set(name, errors);\n        });\n        fields.forEach(function (field) {\n          // eslint-disable-next-line no-param-reassign\n          field.errors = cache.get(field.name) || field.errors;\n        });\n      }\n\n      var changedFields = fields.filter(function (_ref5) {\n        var fieldName = _ref5.name;\n        return containsNamePath(namePathList, fieldName);\n      });\n      onFieldsChange(changedFields, fields);\n    }\n  };\n\n  this.validateFields = function (nameList, options) {\n    _this.warningUnhooked();\n\n    var provideNameList = !!nameList;\n    var namePathList = provideNameList ? nameList.map(getNamePath) : []; // Collect result in promise list\n\n    var promiseList = [];\n\n    _this.getFieldEntities(true).forEach(function (field) {\n      // Add field if not provide `nameList`\n      if (!provideNameList) {\n        namePathList.push(field.getNamePath());\n      }\n      /**\n       * Recursive validate if configured.\n       * TODO: perf improvement @zombieJ\n       */\n\n\n      if ((options === null || options === void 0 ? void 0 : options.recursive) && provideNameList) {\n        var namePath = field.getNamePath();\n\n        if ( // nameList[i] === undefined 说明是以 nameList 开头的\n        // ['name'] -> ['name','list']\n        namePath.every(function (nameUnit, i) {\n          return nameList[i] === nameUnit || nameList[i] === undefined;\n        })) {\n          namePathList.push(namePath);\n        }\n      } // Skip if without rule\n\n\n      if (!field.props.rules || !field.props.rules.length) {\n        return;\n      }\n\n      var fieldNamePath = field.getNamePath(); // Add field validate rule in to promise list\n\n      if (!provideNameList || containsNamePath(namePathList, fieldNamePath)) {\n        var promise = field.validateRules(_objectSpread({\n          validateMessages: _objectSpread(_objectSpread({}, defaultValidateMessages), _this.validateMessages)\n        }, options)); // Wrap promise with field\n\n        promiseList.push(promise.then(function () {\n          return {\n            name: fieldNamePath,\n            errors: [],\n            warnings: []\n          };\n        }).catch(function (ruleErrors) {\n          var mergedErrors = [];\n          var mergedWarnings = [];\n          ruleErrors.forEach(function (_ref6) {\n            var warningOnly = _ref6.rule.warningOnly,\n                errors = _ref6.errors;\n\n            if (warningOnly) {\n              mergedWarnings.push.apply(mergedWarnings, _toConsumableArray(errors));\n            } else {\n              mergedErrors.push.apply(mergedErrors, _toConsumableArray(errors));\n            }\n          });\n\n          if (mergedErrors.length) {\n            return Promise.reject({\n              name: fieldNamePath,\n              errors: mergedErrors,\n              warnings: mergedWarnings\n            });\n          }\n\n          return {\n            name: fieldNamePath,\n            errors: mergedErrors,\n            warnings: mergedWarnings\n          };\n        }));\n      }\n    });\n\n    var summaryPromise = allPromiseFinish(promiseList);\n    _this.lastValidatePromise = summaryPromise; // Notify fields with rule that validate has finished and need update\n\n    summaryPromise.catch(function (results) {\n      return results;\n    }).then(function (results) {\n      var resultNamePathList = results.map(function (_ref7) {\n        var name = _ref7.name;\n        return name;\n      });\n\n      _this.notifyObservers(_this.store, resultNamePathList, {\n        type: 'validateFinish'\n      });\n\n      _this.triggerOnFieldsChange(resultNamePathList, results);\n    });\n    var returnPromise = summaryPromise.then(function () {\n      if (_this.lastValidatePromise === summaryPromise) {\n        return Promise.resolve(_this.getFieldsValue(namePathList));\n      }\n\n      return Promise.reject([]);\n    }).catch(function (results) {\n      var errorList = results.filter(function (result) {\n        return result && result.errors.length;\n      });\n      return Promise.reject({\n        values: _this.getFieldsValue(namePathList),\n        errorFields: errorList,\n        outOfDate: _this.lastValidatePromise !== summaryPromise\n      });\n    }); // Do not throw in console\n\n    returnPromise.catch(function (e) {\n      return e;\n    });\n    return returnPromise;\n  };\n\n  this.submit = function () {\n    _this.warningUnhooked();\n\n    _this.validateFields().then(function (values) {\n      var onFinish = _this.callbacks.onFinish;\n\n      if (onFinish) {\n        try {\n          onFinish(values);\n        } catch (err) {\n          // Should print error if user `onFinish` callback failed\n          console.error(err);\n        }\n      }\n    }).catch(function (e) {\n      var onFinishFailed = _this.callbacks.onFinishFailed;\n\n      if (onFinishFailed) {\n        onFinishFailed(e);\n      }\n    });\n  };\n\n  this.forceRootUpdate = forceRootUpdate;\n});\n\nfunction useForm(form) {\n  var formRef = React.useRef();\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      forceUpdate = _React$useState2[1];\n\n  if (!formRef.current) {\n    if (form) {\n      formRef.current = form;\n    } else {\n      // Create a new FormStore if not provided\n      var forceReRender = function forceReRender() {\n        forceUpdate({});\n      };\n\n      var formStore = new FormStore(forceReRender);\n      formRef.current = formStore.getForm();\n    }\n  }\n\n  return [formRef.current];\n}\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/czy/Desktop/wine/node_modules/rc-field-form/es/useForm.js"],"names":["_slicedToArray","_objectSpread","_objectWithoutProperties","_toConsumableArray","_createClass","_classCallCheck","_excluded","warning","React","HOOK_MARK","allPromiseFinish","cloneDeep","defaultValidateMessages","NameMap","cloneByNamePathList","containsNamePath","getNamePath","getValue","matchNamePath","setValue","setValues","FormStore","forceRootUpdate","_this","formHooked","subscribable","store","fieldEntities","initialValues","callbacks","validateMessages","preserve","lastValidatePromise","getForm","getFieldValue","getFieldsValue","getFieldError","getFieldWarning","getFieldsError","isFieldsTouched","isFieldTouched","isFieldValidating","isFieldsValidating","resetFields","setFields","setFieldsValue","validateFields","submit","_init","getInternalHooks","key","dispatch","initEntityValue","registerField","useSubscribe","setInitialValues","destroyForm","setCallbacks","setValidateMessages","getFields","setPreserve","getInitialValue","registerWatch","prevWithoutPreserves","init","_this$prevWithoutPres","nextStore","map","_ref","namePath","updateStore","getFieldEntities","forEach","entity","isMergedPreserve","isPreserve","set","initValue","length","watchList","callback","push","filter","fn","notifyWatch","arguments","undefined","values","timeoutId","warningUnhooked","process","env","NODE_ENV","window","setTimeout","pure","field","getFieldsMap","cache","getFieldEntitiesForNamePathList","nameList","name","get","INVALIDATE_NAME_PATH","filterFunc","Array","isArray","filteredNameList","_entity$isListField","isListField","call","meta","getMeta","index","errors","getErrors","warnings","getWarnings","fieldError","_len","args","_key","arg0","arg1","namePathList","isAllFieldsTouched","every","some","shortNamePath","fieldNamePath","nameUnit","i","update","list","concat","isNamePathListTouched","entities","namePathListEntities","_ref2","value","testField","resetWithFieldInitialValue","info","initialValue","props","records","Set","add","resetWithFields","formInitialValue","join","size","originValue","skipExist","requiredFieldEntities","_requiredFieldEntitie","apply","r","prevStore","notifyObservers","type","fields","fieldData","data","Object","defineProperty","prevValue","fieldPreserve","mergedPreserve","source","subNamePath","item","defaultValue","_prevStore","triggerDependenciesUpdate","action","updateValue","_namePath","triggerName","mergedInfo","_ref3","onStoreChange","childrenFields","getDependencyChildrenFields","relatedFields","onValuesChange","changedValues","triggerOnFieldsChange","rootNamePath","children","dependencies2fields","dependencies","dependency","dependencyNamePath","fillChildren","has","isFieldDirty","filedErrors","onFieldsChange","_ref4","changedFields","_ref5","fieldName","options","provideNameList","promiseList","recursive","rules","promise","validateRules","then","catch","ruleErrors","mergedErrors","mergedWarnings","_ref6","warningOnly","rule","Promise","reject","summaryPromise","results","resultNamePathList","_ref7","returnPromise","resolve","errorList","result","errorFields","outOfDate","e","onFinish","err","console","error","onFinishFailed","useForm","form","formRef","useRef","_React$useState","useState","_React$useState2","forceUpdate","current","forceReRender","formStore"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,OAAOC,kBAAP,MAA+B,8CAA/B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AACA,IAAIC,SAAS,GAAG,CAAC,MAAD,EAAS,QAAT,CAAhB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,uBAAT,QAAwC,kBAAxC;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,mBAAT,EAA8BC,gBAA9B,EAAgDC,WAAhD,EAA6DC,QAA7D,EAAuEC,aAAvE,EAAsFC,QAAtF,EAAgGC,SAAhG,QAAiH,mBAAjH;AACA,OAAO,IAAIC,SAAS,GAAG,aAAajB,YAAY,CAAC,SAASiB,SAAT,CAAmBC,eAAnB,EAAoC;AACnF,MAAIC,KAAK,GAAG,IAAZ;;AAEAlB,EAAAA,eAAe,CAAC,IAAD,EAAOgB,SAAP,CAAf;;AAEA,OAAKG,UAAL,GAAkB,KAAlB;AACA,OAAKF,eAAL,GAAuB,KAAK,CAA5B;AACA,OAAKG,YAAL,GAAoB,IAApB;AACA,OAAKC,KAAL,GAAa,EAAb;AACA,OAAKC,aAAL,GAAqB,EAArB;AACA,OAAKC,aAAL,GAAqB,EAArB;AACA,OAAKC,SAAL,GAAiB,EAAjB;AACA,OAAKC,gBAAL,GAAwB,IAAxB;AACA,OAAKC,QAAL,GAAgB,IAAhB;AACA,OAAKC,mBAAL,GAA2B,IAA3B;;AAEA,OAAKC,OAAL,GAAe,YAAY;AACzB,WAAO;AACLC,MAAAA,aAAa,EAAEX,KAAK,CAACW,aADhB;AAELC,MAAAA,cAAc,EAAEZ,KAAK,CAACY,cAFjB;AAGLC,MAAAA,aAAa,EAAEb,KAAK,CAACa,aAHhB;AAILC,MAAAA,eAAe,EAAEd,KAAK,CAACc,eAJlB;AAKLC,MAAAA,cAAc,EAAEf,KAAK,CAACe,cALjB;AAMLC,MAAAA,eAAe,EAAEhB,KAAK,CAACgB,eANlB;AAOLC,MAAAA,cAAc,EAAEjB,KAAK,CAACiB,cAPjB;AAQLC,MAAAA,iBAAiB,EAAElB,KAAK,CAACkB,iBARpB;AASLC,MAAAA,kBAAkB,EAAEnB,KAAK,CAACmB,kBATrB;AAULC,MAAAA,WAAW,EAAEpB,KAAK,CAACoB,WAVd;AAWLC,MAAAA,SAAS,EAAErB,KAAK,CAACqB,SAXZ;AAYLC,MAAAA,cAAc,EAAEtB,KAAK,CAACsB,cAZjB;AAaLC,MAAAA,cAAc,EAAEvB,KAAK,CAACuB,cAbjB;AAcLC,MAAAA,MAAM,EAAExB,KAAK,CAACwB,MAdT;AAeLC,MAAAA,KAAK,EAAE,IAfF;AAgBLC,MAAAA,gBAAgB,EAAE1B,KAAK,CAAC0B;AAhBnB,KAAP;AAkBD,GAnBD;;AAqBA,OAAKA,gBAAL,GAAwB,UAAUC,GAAV,EAAe;AACrC,QAAIA,GAAG,KAAKzC,SAAZ,EAAuB;AACrBc,MAAAA,KAAK,CAACC,UAAN,GAAmB,IAAnB;AACA,aAAO;AACL2B,QAAAA,QAAQ,EAAE5B,KAAK,CAAC4B,QADX;AAELC,QAAAA,eAAe,EAAE7B,KAAK,CAAC6B,eAFlB;AAGLC,QAAAA,aAAa,EAAE9B,KAAK,CAAC8B,aAHhB;AAILC,QAAAA,YAAY,EAAE/B,KAAK,CAAC+B,YAJf;AAKLC,QAAAA,gBAAgB,EAAEhC,KAAK,CAACgC,gBALnB;AAMLC,QAAAA,WAAW,EAAEjC,KAAK,CAACiC,WANd;AAOLC,QAAAA,YAAY,EAAElC,KAAK,CAACkC,YAPf;AAQLC,QAAAA,mBAAmB,EAAEnC,KAAK,CAACmC,mBARtB;AASLC,QAAAA,SAAS,EAAEpC,KAAK,CAACoC,SATZ;AAULC,QAAAA,WAAW,EAAErC,KAAK,CAACqC,WAVd;AAWLC,QAAAA,eAAe,EAAEtC,KAAK,CAACsC,eAXlB;AAYLC,QAAAA,aAAa,EAAEvC,KAAK,CAACuC;AAZhB,OAAP;AAcD;;AAEDvD,IAAAA,OAAO,CAAC,KAAD,EAAQ,iEAAR,CAAP;AACA,WAAO,IAAP;AACD,GArBD;;AAuBA,OAAK+C,YAAL,GAAoB,UAAU7B,YAAV,EAAwB;AAC1CF,IAAAA,KAAK,CAACE,YAAN,GAAqBA,YAArB;AACD,GAFD;;AAIA,OAAKsC,oBAAL,GAA4B,IAA5B;;AAEA,OAAKR,gBAAL,GAAwB,UAAU3B,aAAV,EAAyBoC,IAAzB,EAA+B;AACrDzC,IAAAA,KAAK,CAACK,aAAN,GAAsBA,aAAa,IAAI,EAAvC;;AAEA,QAAIoC,IAAJ,EAAU;AACR,UAAIC,qBAAJ;;AAEA,UAAIC,SAAS,GAAG9C,SAAS,CAAC,EAAD,EAAKQ,aAAL,EAAoBL,KAAK,CAACG,KAA1B,CAAzB,CAHQ,CAGmD;AAC3D;AACA;;AAEA,OAACuC,qBAAqB,GAAG1C,KAAK,CAACwC,oBAA/B,MAAyD,IAAzD,IAAiEE,qBAAqB,KAAK,KAAK,CAAhG,GAAoG,KAAK,CAAzG,GAA6GA,qBAAqB,CAACE,GAAtB,CAA0B,UAAUC,IAAV,EAAgB;AACrJ,YAAIC,QAAQ,GAAGD,IAAI,CAAClB,GAApB;AACAgB,QAAAA,SAAS,GAAG/C,QAAQ,CAAC+C,SAAD,EAAYG,QAAZ,EAAsBpD,QAAQ,CAACW,aAAD,EAAgByC,QAAhB,CAA9B,CAApB;AACD,OAH4G,CAA7G;AAIA9C,MAAAA,KAAK,CAACwC,oBAAN,GAA6B,IAA7B;;AAEAxC,MAAAA,KAAK,CAAC+C,WAAN,CAAkBJ,SAAlB;AACD;AACF,GAlBD;;AAoBA,OAAKV,WAAL,GAAmB,YAAY;AAC7B,QAAIO,oBAAoB,GAAG,IAAIlD,OAAJ,EAA3B;;AAEAU,IAAAA,KAAK,CAACgD,gBAAN,CAAuB,IAAvB,EAA6BC,OAA7B,CAAqC,UAAUC,MAAV,EAAkB;AACrD,UAAI,CAAClD,KAAK,CAACmD,gBAAN,CAAuBD,MAAM,CAACE,UAAP,EAAvB,CAAL,EAAkD;AAChDZ,QAAAA,oBAAoB,CAACa,GAArB,CAAyBH,MAAM,CAACzD,WAAP,EAAzB,EAA+C,IAA/C;AACD;AACF,KAJD;;AAMAO,IAAAA,KAAK,CAACwC,oBAAN,GAA6BA,oBAA7B;AACD,GAVD;;AAYA,OAAKF,eAAL,GAAuB,UAAUQ,QAAV,EAAoB;AACzC,QAAIQ,SAAS,GAAG5D,QAAQ,CAACM,KAAK,CAACK,aAAP,EAAsByC,QAAtB,CAAxB,CADyC,CACgB;;AAEzD,WAAOA,QAAQ,CAACS,MAAT,GAAkBnE,SAAS,CAACkE,SAAD,CAA3B,GAAyCA,SAAhD;AACD,GAJD;;AAMA,OAAKpB,YAAL,GAAoB,UAAU5B,SAAV,EAAqB;AACvCN,IAAAA,KAAK,CAACM,SAAN,GAAkBA,SAAlB;AACD,GAFD;;AAIA,OAAK6B,mBAAL,GAA2B,UAAU5B,gBAAV,EAA4B;AACrDP,IAAAA,KAAK,CAACO,gBAAN,GAAyBA,gBAAzB;AACD,GAFD;;AAIA,OAAK8B,WAAL,GAAmB,UAAU7B,QAAV,EAAoB;AACrCR,IAAAA,KAAK,CAACQ,QAAN,GAAiBA,QAAjB;AACD,GAFD;;AAIA,OAAKgD,SAAL,GAAiB,EAAjB;;AAEA,OAAKjB,aAAL,GAAqB,UAAUkB,QAAV,EAAoB;AACvCzD,IAAAA,KAAK,CAACwD,SAAN,CAAgBE,IAAhB,CAAqBD,QAArB;;AAEA,WAAO,YAAY;AACjBzD,MAAAA,KAAK,CAACwD,SAAN,GAAkBxD,KAAK,CAACwD,SAAN,CAAgBG,MAAhB,CAAuB,UAAUC,EAAV,EAAc;AACrD,eAAOA,EAAE,KAAKH,QAAd;AACD,OAFiB,CAAlB;AAGD,KAJD;AAKD,GARD;;AAUA,OAAKI,WAAL,GAAmB,YAAY;AAC7B,QAAIf,QAAQ,GAAGgB,SAAS,CAACP,MAAV,GAAmB,CAAnB,IAAwBO,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAnF,CAD6B,CAG7B;;AACA,QAAI9D,KAAK,CAACwD,SAAN,CAAgBD,MAApB,EAA4B;AAC1B,UAAIS,MAAM,GAAGhE,KAAK,CAACY,cAAN,EAAb;;AAEAZ,MAAAA,KAAK,CAACwD,SAAN,CAAgBP,OAAhB,CAAwB,UAAUQ,QAAV,EAAoB;AAC1CA,QAAAA,QAAQ,CAACO,MAAD,EAASlB,QAAT,CAAR;AACD,OAFD;AAGD;AACF,GAXD;;AAaA,OAAKmB,SAAL,GAAiB,IAAjB;;AAEA,OAAKC,eAAL,GAAuB,YAAY;AACjC,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC,CAACrE,KAAK,CAACiE,SAAhD,IAA6D,OAAOK,MAAP,KAAkB,WAAnF,EAAgG;AAC9FtE,MAAAA,KAAK,CAACiE,SAAN,GAAkBM,UAAU,CAAC,YAAY;AACvCvE,QAAAA,KAAK,CAACiE,SAAN,GAAkB,IAAlB;;AAEA,YAAI,CAACjE,KAAK,CAACC,UAAX,EAAuB;AACrBjB,UAAAA,OAAO,CAAC,KAAD,EAAQ,iGAAR,CAAP;AACD;AACF,OAN2B,CAA5B;AAOD;AACF,GAVD;;AAYA,OAAK+D,WAAL,GAAmB,UAAUJ,SAAV,EAAqB;AACtC3C,IAAAA,KAAK,CAACG,KAAN,GAAcwC,SAAd;AACD,GAFD;;AAIA,OAAKK,gBAAL,GAAwB,YAAY;AAClC,QAAIwB,IAAI,GAAGV,SAAS,CAACP,MAAV,GAAmB,CAAnB,IAAwBO,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAA/E;;AAEA,QAAI,CAACU,IAAL,EAAW;AACT,aAAOxE,KAAK,CAACI,aAAb;AACD;;AAED,WAAOJ,KAAK,CAACI,aAAN,CAAoBuD,MAApB,CAA2B,UAAUc,KAAV,EAAiB;AACjD,aAAOA,KAAK,CAAChF,WAAN,GAAoB8D,MAA3B;AACD,KAFM,CAAP;AAGD,GAVD;;AAYA,OAAKmB,YAAL,GAAoB,YAAY;AAC9B,QAAIF,IAAI,GAAGV,SAAS,CAACP,MAAV,GAAmB,CAAnB,IAAwBO,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAA/E;AACA,QAAIa,KAAK,GAAG,IAAIrF,OAAJ,EAAZ;;AAEAU,IAAAA,KAAK,CAACgD,gBAAN,CAAuBwB,IAAvB,EAA6BvB,OAA7B,CAAqC,UAAUwB,KAAV,EAAiB;AACpD,UAAI3B,QAAQ,GAAG2B,KAAK,CAAChF,WAAN,EAAf;AACAkF,MAAAA,KAAK,CAACtB,GAAN,CAAUP,QAAV,EAAoB2B,KAApB;AACD,KAHD;;AAKA,WAAOE,KAAP;AACD,GAVD;;AAYA,OAAKC,+BAAL,GAAuC,UAAUC,QAAV,EAAoB;AACzD,QAAI,CAACA,QAAL,EAAe;AACb,aAAO7E,KAAK,CAACgD,gBAAN,CAAuB,IAAvB,CAAP;AACD;;AAED,QAAI2B,KAAK,GAAG3E,KAAK,CAAC0E,YAAN,CAAmB,IAAnB,CAAZ;;AAEA,WAAOG,QAAQ,CAACjC,GAAT,CAAa,UAAUkC,IAAV,EAAgB;AAClC,UAAIhC,QAAQ,GAAGrD,WAAW,CAACqF,IAAD,CAA1B;AACA,aAAOH,KAAK,CAACI,GAAN,CAAUjC,QAAV,KAAuB;AAC5BkC,QAAAA,oBAAoB,EAAEvF,WAAW,CAACqF,IAAD;AADL,OAA9B;AAGD,KALM,CAAP;AAMD,GAbD;;AAeA,OAAKlE,cAAL,GAAsB,UAAUiE,QAAV,EAAoBI,UAApB,EAAgC;AACpDjF,IAAAA,KAAK,CAACkE,eAAN;;AAEA,QAAIW,QAAQ,KAAK,IAAb,IAAqB,CAACI,UAA1B,EAAsC;AACpC,aAAOjF,KAAK,CAACG,KAAb;AACD;;AAED,QAAIC,aAAa,GAAGJ,KAAK,CAAC4E,+BAAN,CAAsCM,KAAK,CAACC,OAAN,CAAcN,QAAd,IAA0BA,QAA1B,GAAqC,IAA3E,CAApB;;AAEA,QAAIO,gBAAgB,GAAG,EAAvB;AACAhF,IAAAA,aAAa,CAAC6C,OAAd,CAAsB,UAAUC,MAAV,EAAkB;AACtC,UAAImC,mBAAJ;;AAEA,UAAIvC,QAAQ,GAAG,0BAA0BI,MAA1B,GAAmCA,MAAM,CAAC8B,oBAA1C,GAAiE9B,MAAM,CAACzD,WAAP,EAAhF,CAHsC,CAGgE;AACtG;;AAEA,UAAI,CAACoF,QAAD,KAAc,CAACQ,mBAAmB,GAAGnC,MAAM,CAACoC,WAA9B,MAA+C,IAA/C,IAAuDD,mBAAmB,KAAK,KAAK,CAApF,GAAwF,KAAK,CAA7F,GAAiGA,mBAAmB,CAACE,IAApB,CAAyBrC,MAAzB,CAA/G,CAAJ,EAAsJ;AACpJ;AACD;;AAED,UAAI,CAAC+B,UAAL,EAAiB;AACfG,QAAAA,gBAAgB,CAAC1B,IAAjB,CAAsBZ,QAAtB;AACD,OAFD,MAEO;AACL,YAAI0C,IAAI,GAAG,aAAatC,MAAb,GAAsBA,MAAM,CAACuC,OAAP,EAAtB,GAAyC,IAApD;;AAEA,YAAIR,UAAU,CAACO,IAAD,CAAd,EAAsB;AACpBJ,UAAAA,gBAAgB,CAAC1B,IAAjB,CAAsBZ,QAAtB;AACD;AACF;AACF,KAnBD;AAoBA,WAAOvD,mBAAmB,CAACS,KAAK,CAACG,KAAP,EAAciF,gBAAgB,CAACxC,GAAjB,CAAqBnD,WAArB,CAAd,CAA1B;AACD,GA/BD;;AAiCA,OAAKkB,aAAL,GAAqB,UAAUmE,IAAV,EAAgB;AACnC9E,IAAAA,KAAK,CAACkE,eAAN;;AAEA,QAAIpB,QAAQ,GAAGrD,WAAW,CAACqF,IAAD,CAA1B;AACA,WAAOpF,QAAQ,CAACM,KAAK,CAACG,KAAP,EAAc2C,QAAd,CAAf;AACD,GALD;;AAOA,OAAK/B,cAAL,GAAsB,UAAU8D,QAAV,EAAoB;AACxC7E,IAAAA,KAAK,CAACkE,eAAN;;AAEA,QAAI9D,aAAa,GAAGJ,KAAK,CAAC4E,+BAAN,CAAsCC,QAAtC,CAApB;;AAEA,WAAOzE,aAAa,CAACwC,GAAd,CAAkB,UAAUM,MAAV,EAAkBwC,KAAlB,EAAyB;AAChD,UAAIxC,MAAM,IAAI,EAAE,0BAA0BA,MAA5B,CAAd,EAAmD;AACjD,eAAO;AACL4B,UAAAA,IAAI,EAAE5B,MAAM,CAACzD,WAAP,EADD;AAELkG,UAAAA,MAAM,EAAEzC,MAAM,CAAC0C,SAAP,EAFH;AAGLC,UAAAA,QAAQ,EAAE3C,MAAM,CAAC4C,WAAP;AAHL,SAAP;AAKD;;AAED,aAAO;AACLhB,QAAAA,IAAI,EAAErF,WAAW,CAACoF,QAAQ,CAACa,KAAD,CAAT,CADZ;AAELC,QAAAA,MAAM,EAAE,EAFH;AAGLE,QAAAA,QAAQ,EAAE;AAHL,OAAP;AAKD,KAdM,CAAP;AAeD,GApBD;;AAsBA,OAAKhF,aAAL,GAAqB,UAAUiE,IAAV,EAAgB;AACnC9E,IAAAA,KAAK,CAACkE,eAAN;;AAEA,QAAIpB,QAAQ,GAAGrD,WAAW,CAACqF,IAAD,CAA1B;;AAEA,QAAIiB,UAAU,GAAG/F,KAAK,CAACe,cAAN,CAAqB,CAAC+B,QAAD,CAArB,EAAiC,CAAjC,CAAjB;;AAEA,WAAOiD,UAAU,CAACJ,MAAlB;AACD,GARD;;AAUA,OAAK7E,eAAL,GAAuB,UAAUgE,IAAV,EAAgB;AACrC9E,IAAAA,KAAK,CAACkE,eAAN;;AAEA,QAAIpB,QAAQ,GAAGrD,WAAW,CAACqF,IAAD,CAA1B;;AAEA,QAAIiB,UAAU,GAAG/F,KAAK,CAACe,cAAN,CAAqB,CAAC+B,QAAD,CAArB,EAAiC,CAAjC,CAAjB;;AAEA,WAAOiD,UAAU,CAACF,QAAlB;AACD,GARD;;AAUA,OAAK7E,eAAL,GAAuB,YAAY;AACjChB,IAAAA,KAAK,CAACkE,eAAN;;AAEA,SAAK,IAAI8B,IAAI,GAAGlC,SAAS,CAACP,MAArB,EAA6B0C,IAAI,GAAG,IAAIf,KAAJ,CAAUc,IAAV,CAApC,EAAqDE,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGF,IAA3E,EAAiFE,IAAI,EAArF,EAAyF;AACvFD,MAAAA,IAAI,CAACC,IAAD,CAAJ,GAAapC,SAAS,CAACoC,IAAD,CAAtB;AACD;;AAED,QAAIC,IAAI,GAAGF,IAAI,CAAC,CAAD,CAAf;AAAA,QACIG,IAAI,GAAGH,IAAI,CAAC,CAAD,CADf;AAEA,QAAII,YAAJ;AACA,QAAIC,kBAAkB,GAAG,KAAzB;;AAEA,QAAIL,IAAI,CAAC1C,MAAL,KAAgB,CAApB,EAAuB;AACrB8C,MAAAA,YAAY,GAAG,IAAf;AACD,KAFD,MAEO,IAAIJ,IAAI,CAAC1C,MAAL,KAAgB,CAApB,EAAuB;AAC5B,UAAI2B,KAAK,CAACC,OAAN,CAAcgB,IAAd,CAAJ,EAAyB;AACvBE,QAAAA,YAAY,GAAGF,IAAI,CAACvD,GAAL,CAASnD,WAAT,CAAf;AACA6G,QAAAA,kBAAkB,GAAG,KAArB;AACD,OAHD,MAGO;AACLD,QAAAA,YAAY,GAAG,IAAf;AACAC,QAAAA,kBAAkB,GAAGH,IAArB;AACD;AACF,KARM,MAQA;AACLE,MAAAA,YAAY,GAAGF,IAAI,CAACvD,GAAL,CAASnD,WAAT,CAAf;AACA6G,MAAAA,kBAAkB,GAAGF,IAArB;AACD;;AAED,QAAIhG,aAAa,GAAGJ,KAAK,CAACgD,gBAAN,CAAuB,IAAvB,CAApB;;AAEA,QAAI/B,cAAc,GAAG,SAASA,cAAT,CAAwBwD,KAAxB,EAA+B;AAClD,aAAOA,KAAK,CAACxD,cAAN,EAAP;AACD,KAFD,CA7BiC,CA+B9B;;;AAGH,QAAI,CAACoF,YAAL,EAAmB;AACjB,aAAOC,kBAAkB,GAAGlG,aAAa,CAACmG,KAAd,CAAoBtF,cAApB,CAAH,GAAyCb,aAAa,CAACoG,IAAd,CAAmBvF,cAAnB,CAAlE;AACD,KApCgC,CAoC/B;;;AAGF,QAAI2B,GAAG,GAAG,IAAItD,OAAJ,EAAV;AACA+G,IAAAA,YAAY,CAACpD,OAAb,CAAqB,UAAUwD,aAAV,EAAyB;AAC5C7D,MAAAA,GAAG,CAACS,GAAJ,CAAQoD,aAAR,EAAuB,EAAvB;AACD,KAFD;AAGArG,IAAAA,aAAa,CAAC6C,OAAd,CAAsB,UAAUwB,KAAV,EAAiB;AACrC,UAAIiC,aAAa,GAAGjC,KAAK,CAAChF,WAAN,EAApB,CADqC,CACI;;AAEzC4G,MAAAA,YAAY,CAACpD,OAAb,CAAqB,UAAUwD,aAAV,EAAyB;AAC5C,YAAIA,aAAa,CAACF,KAAd,CAAoB,UAAUI,QAAV,EAAoBC,CAApB,EAAuB;AAC7C,iBAAOF,aAAa,CAACE,CAAD,CAAb,KAAqBD,QAA5B;AACD,SAFG,CAAJ,EAEI;AACF/D,UAAAA,GAAG,CAACiE,MAAJ,CAAWJ,aAAX,EAA0B,UAAUK,IAAV,EAAgB;AACxC,mBAAO,GAAGC,MAAH,CAAUnI,kBAAkB,CAACkI,IAAD,CAA5B,EAAoC,CAACrC,KAAD,CAApC,CAAP;AACD,WAFD;AAGD;AACF,OARD;AASD,KAZD,EA3CiC,CAuD7B;;AAEJ,QAAIuC,qBAAqB,GAAG,SAASA,qBAAT,CAA+BC,QAA/B,EAAyC;AACnE,aAAOA,QAAQ,CAACT,IAAT,CAAcvF,cAAd,CAAP;AACD,KAFD;;AAIA,QAAIiG,oBAAoB,GAAGtE,GAAG,CAACA,GAAJ,CAAQ,UAAUuE,KAAV,EAAiB;AAClD,UAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;AACA,aAAOA,KAAP;AACD,KAH0B,CAA3B;AAIA,WAAOd,kBAAkB,GAAGY,oBAAoB,CAACX,KAArB,CAA2BS,qBAA3B,CAAH,GAAuDE,oBAAoB,CAACV,IAArB,CAA0BQ,qBAA1B,CAAhF;AACD,GAlED;;AAoEA,OAAK/F,cAAL,GAAsB,UAAU6D,IAAV,EAAgB;AACpC9E,IAAAA,KAAK,CAACkE,eAAN;;AAEA,WAAOlE,KAAK,CAACgB,eAAN,CAAsB,CAAC8D,IAAD,CAAtB,CAAP;AACD,GAJD;;AAMA,OAAK3D,kBAAL,GAA0B,UAAU0D,QAAV,EAAoB;AAC5C7E,IAAAA,KAAK,CAACkE,eAAN;;AAEA,QAAI9D,aAAa,GAAGJ,KAAK,CAACgD,gBAAN,EAApB;;AAEA,QAAI,CAAC6B,QAAL,EAAe;AACb,aAAOzE,aAAa,CAACoG,IAAd,CAAmB,UAAUa,SAAV,EAAqB;AAC7C,eAAOA,SAAS,CAACnG,iBAAV,EAAP;AACD,OAFM,CAAP;AAGD;;AAED,QAAImF,YAAY,GAAGxB,QAAQ,CAACjC,GAAT,CAAanD,WAAb,CAAnB;AACA,WAAOW,aAAa,CAACoG,IAAd,CAAmB,UAAUa,SAAV,EAAqB;AAC7C,UAAIX,aAAa,GAAGW,SAAS,CAAC5H,WAAV,EAApB;AACA,aAAOD,gBAAgB,CAAC6G,YAAD,EAAeK,aAAf,CAAhB,IAAiDW,SAAS,CAACnG,iBAAV,EAAxD;AACD,KAHM,CAAP;AAID,GAhBD;;AAkBA,OAAKA,iBAAL,GAAyB,UAAU4D,IAAV,EAAgB;AACvC9E,IAAAA,KAAK,CAACkE,eAAN;;AAEA,WAAOlE,KAAK,CAACmB,kBAAN,CAAyB,CAAC2D,IAAD,CAAzB,CAAP;AACD,GAJD;;AAMA,OAAKwC,0BAAL,GAAkC,YAAY;AAC5C,QAAIC,IAAI,GAAGzD,SAAS,CAACP,MAAV,GAAmB,CAAnB,IAAwBO,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E,CAD4C,CAE5C;;AACA,QAAIa,KAAK,GAAG,IAAIrF,OAAJ,EAAZ;;AAEA,QAAIc,aAAa,GAAGJ,KAAK,CAACgD,gBAAN,CAAuB,IAAvB,CAApB;;AAEA5C,IAAAA,aAAa,CAAC6C,OAAd,CAAsB,UAAUwB,KAAV,EAAiB;AACrC,UAAI+C,YAAY,GAAG/C,KAAK,CAACgD,KAAN,CAAYD,YAA/B;AACA,UAAI1E,QAAQ,GAAG2B,KAAK,CAAChF,WAAN,EAAf,CAFqC,CAED;;AAEpC,UAAI+H,YAAY,KAAKzD,SAArB,EAAgC;AAC9B,YAAI2D,OAAO,GAAG/C,KAAK,CAACI,GAAN,CAAUjC,QAAV,KAAuB,IAAI6E,GAAJ,EAArC;AACAD,QAAAA,OAAO,CAACE,GAAR,CAAY;AACV1E,UAAAA,MAAM,EAAEuB,KADE;AAEV2C,UAAAA,KAAK,EAAEI;AAFG,SAAZ;AAIA7C,QAAAA,KAAK,CAACtB,GAAN,CAAUP,QAAV,EAAoB4E,OAApB;AACD;AACF,KAZD,EAP4C,CAmBxC;;AAEJ,QAAIG,eAAe,GAAG,SAASA,eAAT,CAAyBZ,QAAzB,EAAmC;AACvDA,MAAAA,QAAQ,CAAChE,OAAT,CAAiB,UAAUwB,KAAV,EAAiB;AAChC,YAAI+C,YAAY,GAAG/C,KAAK,CAACgD,KAAN,CAAYD,YAA/B;;AAEA,YAAIA,YAAY,KAAKzD,SAArB,EAAgC;AAC9B,cAAIjB,QAAQ,GAAG2B,KAAK,CAAChF,WAAN,EAAf;;AAEA,cAAIqI,gBAAgB,GAAG9H,KAAK,CAACsC,eAAN,CAAsBQ,QAAtB,CAAvB;;AAEA,cAAIgF,gBAAgB,KAAK/D,SAAzB,EAAoC;AAClC;AACA/E,YAAAA,OAAO,CAAC,KAAD,EAAQ,+CAA+C+H,MAA/C,CAAsDjE,QAAQ,CAACiF,IAAT,CAAc,GAAd,CAAtD,EAA0E,gCAA1E,CAAR,CAAP;AACD,WAHD,MAGO;AACL,gBAAIL,OAAO,GAAG/C,KAAK,CAACI,GAAN,CAAUjC,QAAV,CAAd;;AAEA,gBAAI4E,OAAO,IAAIA,OAAO,CAACM,IAAR,GAAe,CAA9B,EAAiC;AAC/B;AACAhJ,cAAAA,OAAO,CAAC,KAAD,EAAQ,6BAA6B+H,MAA7B,CAAoCjE,QAAQ,CAACiF,IAAT,CAAc,GAAd,CAApC,EAAwD,yDAAxD,CAAR,CAAP;AACD,aAHD,MAGO,IAAIL,OAAJ,EAAa;AAClB,kBAAIO,WAAW,GAAGjI,KAAK,CAACW,aAAN,CAAoBmC,QAApB,CAAlB,CADkB,CAC+B;;;AAGjD,kBAAI,CAACyE,IAAI,CAACW,SAAN,IAAmBD,WAAW,KAAKlE,SAAvC,EAAkD;AAChD/D,gBAAAA,KAAK,CAAC+C,WAAN,CAAkBnD,QAAQ,CAACI,KAAK,CAACG,KAAP,EAAc2C,QAAd,EAAwBlE,kBAAkB,CAAC8I,OAAD,CAAlB,CAA4B,CAA5B,EAA+BN,KAAvD,CAA1B;AACD;AACF;AACF;AACF;AACF,OA3BD;AA4BD,KA7BD;;AA+BA,QAAIe,qBAAJ;;AAEA,QAAIZ,IAAI,CAACN,QAAT,EAAmB;AACjBkB,MAAAA,qBAAqB,GAAGZ,IAAI,CAACN,QAA7B;AACD,KAFD,MAEO,IAAIM,IAAI,CAAClB,YAAT,EAAuB;AAC5B8B,MAAAA,qBAAqB,GAAG,EAAxB;AACAZ,MAAAA,IAAI,CAAClB,YAAL,CAAkBpD,OAAlB,CAA0B,UAAUH,QAAV,EAAoB;AAC5C,YAAI4E,OAAO,GAAG/C,KAAK,CAACI,GAAN,CAAUjC,QAAV,CAAd;;AAEA,YAAI4E,OAAJ,EAAa;AACX,cAAIU,qBAAJ;;AAEA,WAACA,qBAAqB,GAAGD,qBAAzB,EAAgDzE,IAAhD,CAAqD2E,KAArD,CAA2DD,qBAA3D,EAAkFxJ,kBAAkB,CAACA,kBAAkB,CAAC8I,OAAD,CAAlB,CAA4B9E,GAA5B,CAAgC,UAAU0F,CAAV,EAAa;AAChJ,mBAAOA,CAAC,CAACpF,MAAT;AACD,WAFoG,CAAD,CAApG;AAGD;AACF,OAVD;AAWD,KAbM,MAaA;AACLiF,MAAAA,qBAAqB,GAAG/H,aAAxB;AACD;;AAEDyH,IAAAA,eAAe,CAACM,qBAAD,CAAf;AACD,GA1ED;;AA4EA,OAAK/G,WAAL,GAAmB,UAAUyD,QAAV,EAAoB;AACrC7E,IAAAA,KAAK,CAACkE,eAAN;;AAEA,QAAIqE,SAAS,GAAGvI,KAAK,CAACG,KAAtB;;AAEA,QAAI,CAAC0E,QAAL,EAAe;AACb7E,MAAAA,KAAK,CAAC+C,WAAN,CAAkBlD,SAAS,CAAC,EAAD,EAAKG,KAAK,CAACK,aAAX,CAA3B;;AAEAL,MAAAA,KAAK,CAACsH,0BAAN;;AAEAtH,MAAAA,KAAK,CAACwI,eAAN,CAAsBD,SAAtB,EAAiC,IAAjC,EAAuC;AACrCE,QAAAA,IAAI,EAAE;AAD+B,OAAvC;;AAIAzI,MAAAA,KAAK,CAAC6D,WAAN;;AAEA;AACD,KAjBoC,CAiBnC;;;AAGF,QAAIwC,YAAY,GAAGxB,QAAQ,CAACjC,GAAT,CAAanD,WAAb,CAAnB;AACA4G,IAAAA,YAAY,CAACpD,OAAb,CAAqB,UAAUH,QAAV,EAAoB;AACvC,UAAI0E,YAAY,GAAGxH,KAAK,CAACsC,eAAN,CAAsBQ,QAAtB,CAAnB;;AAEA9C,MAAAA,KAAK,CAAC+C,WAAN,CAAkBnD,QAAQ,CAACI,KAAK,CAACG,KAAP,EAAc2C,QAAd,EAAwB0E,YAAxB,CAA1B;AACD,KAJD;;AAMAxH,IAAAA,KAAK,CAACsH,0BAAN,CAAiC;AAC/BjB,MAAAA,YAAY,EAAEA;AADiB,KAAjC;;AAIArG,IAAAA,KAAK,CAACwI,eAAN,CAAsBD,SAAtB,EAAiClC,YAAjC,EAA+C;AAC7CoC,MAAAA,IAAI,EAAE;AADuC,KAA/C;;AAIAzI,IAAAA,KAAK,CAAC6D,WAAN,CAAkBwC,YAAlB;AACD,GApCD;;AAsCA,OAAKhF,SAAL,GAAiB,UAAUqH,MAAV,EAAkB;AACjC1I,IAAAA,KAAK,CAACkE,eAAN;;AAEA,QAAIqE,SAAS,GAAGvI,KAAK,CAACG,KAAtB;AACA,QAAIkG,YAAY,GAAG,EAAnB;AACAqC,IAAAA,MAAM,CAACzF,OAAP,CAAe,UAAU0F,SAAV,EAAqB;AAClC,UAAI7D,IAAI,GAAG6D,SAAS,CAAC7D,IAArB;AAAA,UACIa,MAAM,GAAGgD,SAAS,CAAChD,MADvB;AAAA,UAEIiD,IAAI,GAAGjK,wBAAwB,CAACgK,SAAD,EAAY5J,SAAZ,CAFnC;;AAIA,UAAI+D,QAAQ,GAAGrD,WAAW,CAACqF,IAAD,CAA1B;AACAuB,MAAAA,YAAY,CAAC3C,IAAb,CAAkBZ,QAAlB,EANkC,CAML;;AAE7B,UAAI,WAAW8F,IAAf,EAAqB;AACnB5I,QAAAA,KAAK,CAAC+C,WAAN,CAAkBnD,QAAQ,CAACI,KAAK,CAACG,KAAP,EAAc2C,QAAd,EAAwB8F,IAAI,CAACxB,KAA7B,CAA1B;AACD;;AAEDpH,MAAAA,KAAK,CAACwI,eAAN,CAAsBD,SAAtB,EAAiC,CAACzF,QAAD,CAAjC,EAA6C;AAC3C2F,QAAAA,IAAI,EAAE,UADqC;AAE3CG,QAAAA,IAAI,EAAED;AAFqC,OAA7C;AAID,KAhBD;;AAkBA3I,IAAAA,KAAK,CAAC6D,WAAN,CAAkBwC,YAAlB;AACD,GAxBD;;AA0BA,OAAKjE,SAAL,GAAiB,YAAY;AAC3B,QAAI6E,QAAQ,GAAGjH,KAAK,CAACgD,gBAAN,CAAuB,IAAvB,CAAf;;AAEA,QAAI0F,MAAM,GAAGzB,QAAQ,CAACrE,GAAT,CAAa,UAAU6B,KAAV,EAAiB;AACzC,UAAI3B,QAAQ,GAAG2B,KAAK,CAAChF,WAAN,EAAf;AACA,UAAI+F,IAAI,GAAGf,KAAK,CAACgB,OAAN,EAAX;;AAEA,UAAIkD,SAAS,GAAGjK,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK8G,IAAL,CAAd,EAA0B,EAA1B,EAA8B;AACzDV,QAAAA,IAAI,EAAEhC,QADmD;AAEzDsE,QAAAA,KAAK,EAAEpH,KAAK,CAACW,aAAN,CAAoBmC,QAApB;AAFkD,OAA9B,CAA7B;;AAKA+F,MAAAA,MAAM,CAACC,cAAP,CAAsBH,SAAtB,EAAiC,eAAjC,EAAkD;AAChDvB,QAAAA,KAAK,EAAE;AADyC,OAAlD;AAGA,aAAOuB,SAAP;AACD,KAbY,CAAb;AAcA,WAAOD,MAAP;AACD,GAlBD;;AAoBA,OAAK7G,eAAL,GAAuB,UAAUqB,MAAV,EAAkB;AACvC,QAAIsE,YAAY,GAAGtE,MAAM,CAACuE,KAAP,CAAaD,YAAhC;;AAEA,QAAIA,YAAY,KAAKzD,SAArB,EAAgC;AAC9B,UAAIjB,QAAQ,GAAGI,MAAM,CAACzD,WAAP,EAAf;AACA,UAAIsJ,SAAS,GAAGrJ,QAAQ,CAACM,KAAK,CAACG,KAAP,EAAc2C,QAAd,CAAxB;;AAEA,UAAIiG,SAAS,KAAKhF,SAAlB,EAA6B;AAC3B/D,QAAAA,KAAK,CAAC+C,WAAN,CAAkBnD,QAAQ,CAACI,KAAK,CAACG,KAAP,EAAc2C,QAAd,EAAwB0E,YAAxB,CAA1B;AACD;AACF;AACF,GAXD;;AAaA,OAAKrE,gBAAL,GAAwB,UAAU6F,aAAV,EAAyB;AAC/C,QAAIC,cAAc,GAAGD,aAAa,KAAKjF,SAAlB,GAA8BiF,aAA9B,GAA8ChJ,KAAK,CAACQ,QAAzE;AACA,WAAOyI,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,KAAK,CAAnD,GAAuDA,cAAvD,GAAwE,IAA/E;AACD,GAHD;;AAKA,OAAKnH,aAAL,GAAqB,UAAUoB,MAAV,EAAkB;AACrClD,IAAAA,KAAK,CAACI,aAAN,CAAoBsD,IAApB,CAAyBR,MAAzB;;AAEA,QAAIJ,QAAQ,GAAGI,MAAM,CAACzD,WAAP,EAAf;;AAEAO,IAAAA,KAAK,CAAC6D,WAAN,CAAkB,CAACf,QAAD,CAAlB,EALqC,CAKN;;;AAG/B,QAAII,MAAM,CAACuE,KAAP,CAAaD,YAAb,KAA8BzD,SAAlC,EAA6C;AAC3C,UAAIwE,SAAS,GAAGvI,KAAK,CAACG,KAAtB;;AAEAH,MAAAA,KAAK,CAACsH,0BAAN,CAAiC;AAC/BL,QAAAA,QAAQ,EAAE,CAAC/D,MAAD,CADqB;AAE/BgF,QAAAA,SAAS,EAAE;AAFoB,OAAjC;;AAKAlI,MAAAA,KAAK,CAACwI,eAAN,CAAsBD,SAAtB,EAAiC,CAACrF,MAAM,CAACzD,WAAP,EAAD,CAAjC,EAAyD;AACvDgJ,QAAAA,IAAI,EAAE,aADiD;AAEvDS,QAAAA,MAAM,EAAE;AAF+C,OAAzD;AAID,KApBoC,CAoBnC;;;AAGF,WAAO,UAAU5D,WAAV,EAAuB9E,QAAvB,EAAiC;AACtC,UAAI2I,WAAW,GAAGrF,SAAS,CAACP,MAAV,GAAmB,CAAnB,IAAwBO,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAtF;AACA9D,MAAAA,KAAK,CAACI,aAAN,GAAsBJ,KAAK,CAACI,aAAN,CAAoBuD,MAApB,CAA2B,UAAUyF,IAAV,EAAgB;AAC/D,eAAOA,IAAI,KAAKlG,MAAhB;AACD,OAFqB,CAAtB,CAFsC,CAIlC;;AAEJ,UAAI,CAAClD,KAAK,CAACmD,gBAAN,CAAuB3C,QAAvB,CAAD,KAAsC,CAAC8E,WAAD,IAAgB6D,WAAW,CAAC5F,MAAZ,GAAqB,CAA3E,CAAJ,EAAmF;AACjF,YAAI8F,YAAY,GAAG/D,WAAW,GAAGvB,SAAH,GAAe/D,KAAK,CAACsC,eAAN,CAAsBQ,QAAtB,CAA7C;;AAEA,YAAIA,QAAQ,CAACS,MAAT,IAAmBvD,KAAK,CAACW,aAAN,CAAoBmC,QAApB,MAAkCuG,YAArD,IAAqErJ,KAAK,CAACI,aAAN,CAAoBmG,KAApB,CAA0B,UAAU9B,KAAV,EAAiB;AAClH,iBAAQ;AACN,aAAC9E,aAAa,CAAC8E,KAAK,CAAChF,WAAN,EAAD,EAAsBqD,QAAtB;AADhB;AAGD,SAJwE,CAAzE,EAII;AACF,cAAIwG,UAAU,GAAGtJ,KAAK,CAACG,KAAvB;;AAEAH,UAAAA,KAAK,CAAC+C,WAAN,CAAkBnD,QAAQ,CAAC0J,UAAD,EAAaxG,QAAb,EAAuBuG,YAAvB,EAAqC,IAArC,CAA1B,EAHE,CAGqE;;;AAGvErJ,UAAAA,KAAK,CAACwI,eAAN,CAAsBc,UAAtB,EAAkC,CAACxG,QAAD,CAAlC,EAA8C;AAC5C2F,YAAAA,IAAI,EAAE;AADsC,WAA9C,EANE,CAQE;;;AAGJzI,UAAAA,KAAK,CAACuJ,yBAAN,CAAgCD,UAAhC,EAA4CxG,QAA5C;AACD;AACF;;AAED9C,MAAAA,KAAK,CAAC6D,WAAN,CAAkB,CAACf,QAAD,CAAlB;AACD,KA7BD;AA8BD,GArDD;;AAuDA,OAAKlB,QAAL,GAAgB,UAAU4H,MAAV,EAAkB;AAChC,YAAQA,MAAM,CAACf,IAAf;AACE,WAAK,aAAL;AACE;AACE,cAAI3F,QAAQ,GAAG0G,MAAM,CAAC1G,QAAtB;AAAA,cACIsE,KAAK,GAAGoC,MAAM,CAACpC,KADnB;;AAGApH,UAAAA,KAAK,CAACyJ,WAAN,CAAkB3G,QAAlB,EAA4BsE,KAA5B;;AAEA;AACD;;AAEH,WAAK,eAAL;AACE;AACE,cAAIsC,SAAS,GAAGF,MAAM,CAAC1G,QAAvB;AAAA,cACI6G,WAAW,GAAGH,MAAM,CAACG,WADzB;;AAGA3J,UAAAA,KAAK,CAACuB,cAAN,CAAqB,CAACmI,SAAD,CAArB,EAAkC;AAChCC,YAAAA,WAAW,EAAEA;AADmB,WAAlC;;AAIA;AACD;;AAEH,cAvBF,CAuBW;;AAvBX;AA0BD,GA3BD;;AA6BA,OAAKnB,eAAL,GAAuB,UAAUD,SAAV,EAAqBlC,YAArB,EAAmCkB,IAAnC,EAAyC;AAC9D,QAAIvH,KAAK,CAACE,YAAV,EAAwB;AACtB,UAAI0J,UAAU,GAAGlL,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK6I,IAAL,CAAd,EAA0B,EAA1B,EAA8B;AAC1DpH,QAAAA,KAAK,EAAEH,KAAK,CAACY,cAAN,CAAqB,IAArB;AADmD,OAA9B,CAA9B;;AAIAZ,MAAAA,KAAK,CAACgD,gBAAN,GAAyBC,OAAzB,CAAiC,UAAU4G,KAAV,EAAiB;AAChD,YAAIC,aAAa,GAAGD,KAAK,CAACC,aAA1B;AACAA,QAAAA,aAAa,CAACvB,SAAD,EAAYlC,YAAZ,EAA0BuD,UAA1B,CAAb;AACD,OAHD;AAID,KATD,MASO;AACL5J,MAAAA,KAAK,CAACD,eAAN;AACD;AACF,GAbD;;AAeA,OAAKwJ,yBAAL,GAAiC,UAAUhB,SAAV,EAAqBzF,QAArB,EAA+B;AAC9D,QAAIiH,cAAc,GAAG/J,KAAK,CAACgK,2BAAN,CAAkClH,QAAlC,CAArB;;AAEA,QAAIiH,cAAc,CAACxG,MAAnB,EAA2B;AACzBvD,MAAAA,KAAK,CAACuB,cAAN,CAAqBwI,cAArB;AACD;;AAED/J,IAAAA,KAAK,CAACwI,eAAN,CAAsBD,SAAtB,EAAiCwB,cAAjC,EAAiD;AAC/CtB,MAAAA,IAAI,EAAE,oBADyC;AAE/CwB,MAAAA,aAAa,EAAE,CAACnH,QAAD,EAAWiE,MAAX,CAAkBnI,kBAAkB,CAACmL,cAAD,CAApC;AAFgC,KAAjD;;AAKA,WAAOA,cAAP;AACD,GAbD;;AAeA,OAAKN,WAAL,GAAmB,UAAU3E,IAAV,EAAgBsC,KAAhB,EAAuB;AACxC,QAAItE,QAAQ,GAAGrD,WAAW,CAACqF,IAAD,CAA1B;AACA,QAAIyD,SAAS,GAAGvI,KAAK,CAACG,KAAtB;;AAEAH,IAAAA,KAAK,CAAC+C,WAAN,CAAkBnD,QAAQ,CAACI,KAAK,CAACG,KAAP,EAAc2C,QAAd,EAAwBsE,KAAxB,CAA1B;;AAEApH,IAAAA,KAAK,CAACwI,eAAN,CAAsBD,SAAtB,EAAiC,CAACzF,QAAD,CAAjC,EAA6C;AAC3C2F,MAAAA,IAAI,EAAE,aADqC;AAE3CS,MAAAA,MAAM,EAAE;AAFmC,KAA7C;;AAKAlJ,IAAAA,KAAK,CAAC6D,WAAN,CAAkB,CAACf,QAAD,CAAlB,EAXwC,CAWT;;;AAG/B,QAAIiH,cAAc,GAAG/J,KAAK,CAACuJ,yBAAN,CAAgChB,SAAhC,EAA2CzF,QAA3C,CAArB,CAdwC,CAcmC;;;AAG3E,QAAIoH,cAAc,GAAGlK,KAAK,CAACM,SAAN,CAAgB4J,cAArC;;AAEA,QAAIA,cAAJ,EAAoB;AAClB,UAAIC,aAAa,GAAG5K,mBAAmB,CAACS,KAAK,CAACG,KAAP,EAAc,CAAC2C,QAAD,CAAd,CAAvC;AACAoH,MAAAA,cAAc,CAACC,aAAD,EAAgBnK,KAAK,CAACY,cAAN,EAAhB,CAAd;AACD;;AAEDZ,IAAAA,KAAK,CAACoK,qBAAN,CAA4B,CAACtH,QAAD,EAAWiE,MAAX,CAAkBnI,kBAAkB,CAACmL,cAAD,CAApC,CAA5B;AACD,GAzBD;;AA2BA,OAAKzI,cAAL,GAAsB,UAAUnB,KAAV,EAAiB;AACrCH,IAAAA,KAAK,CAACkE,eAAN;;AAEA,QAAIqE,SAAS,GAAGvI,KAAK,CAACG,KAAtB;;AAEA,QAAIA,KAAJ,EAAW;AACT,UAAIwC,SAAS,GAAG9C,SAAS,CAACG,KAAK,CAACG,KAAP,EAAcA,KAAd,CAAzB;;AAEAH,MAAAA,KAAK,CAAC+C,WAAN,CAAkBJ,SAAlB;AACD;;AAED3C,IAAAA,KAAK,CAACwI,eAAN,CAAsBD,SAAtB,EAAiC,IAAjC,EAAuC;AACrCE,MAAAA,IAAI,EAAE,aAD+B;AAErCS,MAAAA,MAAM,EAAE;AAF6B,KAAvC;;AAKAlJ,IAAAA,KAAK,CAAC6D,WAAN;AACD,GAjBD;;AAmBA,OAAKmG,2BAAL,GAAmC,UAAUK,YAAV,EAAwB;AACzD,QAAIC,QAAQ,GAAG,IAAI3C,GAAJ,EAAf;AACA,QAAIoC,cAAc,GAAG,EAArB;AACA,QAAIQ,mBAAmB,GAAG,IAAIjL,OAAJ,EAA1B;AACA;AACJ;AACA;AACA;;AAEIU,IAAAA,KAAK,CAACgD,gBAAN,GAAyBC,OAAzB,CAAiC,UAAUwB,KAAV,EAAiB;AAChD,UAAI+F,YAAY,GAAG/F,KAAK,CAACgD,KAAN,CAAY+C,YAA/B;AACA,OAACA,YAAY,IAAI,EAAjB,EAAqBvH,OAArB,CAA6B,UAAUwH,UAAV,EAAsB;AACjD,YAAIC,kBAAkB,GAAGjL,WAAW,CAACgL,UAAD,CAApC;AACAF,QAAAA,mBAAmB,CAAC1D,MAApB,CAA2B6D,kBAA3B,EAA+C,YAAY;AACzD,cAAIhC,MAAM,GAAG5E,SAAS,CAACP,MAAV,GAAmB,CAAnB,IAAwBO,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAAI6D,GAAJ,EAAjF;AACAe,UAAAA,MAAM,CAACd,GAAP,CAAWnD,KAAX;AACA,iBAAOiE,MAAP;AACD,SAJD;AAKD,OAPD;AAQD,KAVD;;AAYA,QAAIiC,YAAY,GAAG,SAASA,YAAT,CAAsB7H,QAAtB,EAAgC;AACjD,UAAI4F,MAAM,GAAG6B,mBAAmB,CAACxF,GAApB,CAAwBjC,QAAxB,KAAqC,IAAI6E,GAAJ,EAAlD;AACAe,MAAAA,MAAM,CAACzF,OAAP,CAAe,UAAUwB,KAAV,EAAiB;AAC9B,YAAI,CAAC6F,QAAQ,CAACM,GAAT,CAAanG,KAAb,CAAL,EAA0B;AACxB6F,UAAAA,QAAQ,CAAC1C,GAAT,CAAanD,KAAb;AACA,cAAIiC,aAAa,GAAGjC,KAAK,CAAChF,WAAN,EAApB;;AAEA,cAAIgF,KAAK,CAACoG,YAAN,MAAwBnE,aAAa,CAACnD,MAA1C,EAAkD;AAChDwG,YAAAA,cAAc,CAACrG,IAAf,CAAoBgD,aAApB;AACAiE,YAAAA,YAAY,CAACjE,aAAD,CAAZ;AACD;AACF;AACF,OAVD;AAWD,KAbD;;AAeAiE,IAAAA,YAAY,CAACN,YAAD,CAAZ;AACA,WAAON,cAAP;AACD,GAtCD;;AAwCA,OAAKK,qBAAL,GAA6B,UAAU/D,YAAV,EAAwByE,WAAxB,EAAqC;AAChE,QAAIC,cAAc,GAAG/K,KAAK,CAACM,SAAN,CAAgByK,cAArC;;AAEA,QAAIA,cAAJ,EAAoB;AAClB,UAAIrC,MAAM,GAAG1I,KAAK,CAACoC,SAAN,EAAb;AACA;AACN;AACA;;;AAGM,UAAI0I,WAAJ,EAAiB;AACf,YAAInG,KAAK,GAAG,IAAIrF,OAAJ,EAAZ;AACAwL,QAAAA,WAAW,CAAC7H,OAAZ,CAAoB,UAAU+H,KAAV,EAAiB;AACnC,cAAIlG,IAAI,GAAGkG,KAAK,CAAClG,IAAjB;AAAA,cACIa,MAAM,GAAGqF,KAAK,CAACrF,MADnB;AAEAhB,UAAAA,KAAK,CAACtB,GAAN,CAAUyB,IAAV,EAAgBa,MAAhB;AACD,SAJD;AAKA+C,QAAAA,MAAM,CAACzF,OAAP,CAAe,UAAUwB,KAAV,EAAiB;AAC9B;AACAA,UAAAA,KAAK,CAACkB,MAAN,GAAehB,KAAK,CAACI,GAAN,CAAUN,KAAK,CAACK,IAAhB,KAAyBL,KAAK,CAACkB,MAA9C;AACD,SAHD;AAID;;AAED,UAAIsF,aAAa,GAAGvC,MAAM,CAAC/E,MAAP,CAAc,UAAUuH,KAAV,EAAiB;AACjD,YAAIC,SAAS,GAAGD,KAAK,CAACpG,IAAtB;AACA,eAAOtF,gBAAgB,CAAC6G,YAAD,EAAe8E,SAAf,CAAvB;AACD,OAHmB,CAApB;AAIAJ,MAAAA,cAAc,CAACE,aAAD,EAAgBvC,MAAhB,CAAd;AACD;AACF,GA7BD;;AA+BA,OAAKnH,cAAL,GAAsB,UAAUsD,QAAV,EAAoBuG,OAApB,EAA6B;AACjDpL,IAAAA,KAAK,CAACkE,eAAN;;AAEA,QAAImH,eAAe,GAAG,CAAC,CAACxG,QAAxB;AACA,QAAIwB,YAAY,GAAGgF,eAAe,GAAGxG,QAAQ,CAACjC,GAAT,CAAanD,WAAb,CAAH,GAA+B,EAAjE,CAJiD,CAIoB;;AAErE,QAAI6L,WAAW,GAAG,EAAlB;;AAEAtL,IAAAA,KAAK,CAACgD,gBAAN,CAAuB,IAAvB,EAA6BC,OAA7B,CAAqC,UAAUwB,KAAV,EAAiB;AACpD;AACA,UAAI,CAAC4G,eAAL,EAAsB;AACpBhF,QAAAA,YAAY,CAAC3C,IAAb,CAAkBe,KAAK,CAAChF,WAAN,EAAlB;AACD;AACD;AACN;AACA;AACA;;;AAGM,UAAI,CAAC2L,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACG,SAA3D,KAAyEF,eAA7E,EAA8F;AAC5F,YAAIvI,QAAQ,GAAG2B,KAAK,CAAChF,WAAN,EAAf;;AAEA,aAAK;AACL;AACAqD,QAAAA,QAAQ,CAACyD,KAAT,CAAe,UAAUI,QAAV,EAAoBC,CAApB,EAAuB;AACpC,iBAAO/B,QAAQ,CAAC+B,CAAD,CAAR,KAAgBD,QAAhB,IAA4B9B,QAAQ,CAAC+B,CAAD,CAAR,KAAgB7C,SAAnD;AACD,SAFD,CAFA,EAII;AACFsC,UAAAA,YAAY,CAAC3C,IAAb,CAAkBZ,QAAlB;AACD;AACF,OArBmD,CAqBlD;;;AAGF,UAAI,CAAC2B,KAAK,CAACgD,KAAN,CAAY+D,KAAb,IAAsB,CAAC/G,KAAK,CAACgD,KAAN,CAAY+D,KAAZ,CAAkBjI,MAA7C,EAAqD;AACnD;AACD;;AAED,UAAImD,aAAa,GAAGjC,KAAK,CAAChF,WAAN,EAApB,CA5BoD,CA4BX;;AAEzC,UAAI,CAAC4L,eAAD,IAAoB7L,gBAAgB,CAAC6G,YAAD,EAAeK,aAAf,CAAxC,EAAuE;AACrE,YAAI+E,OAAO,GAAGhH,KAAK,CAACiH,aAAN,CAAoBhN,aAAa,CAAC;AAC9C6B,UAAAA,gBAAgB,EAAE7B,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKW,uBAAL,CAAd,EAA6CW,KAAK,CAACO,gBAAnD;AADe,SAAD,EAE5C6K,OAF4C,CAAjC,CAAd,CADqE,CAGvD;;AAEdE,QAAAA,WAAW,CAAC5H,IAAZ,CAAiB+H,OAAO,CAACE,IAAR,CAAa,YAAY;AACxC,iBAAO;AACL7G,YAAAA,IAAI,EAAE4B,aADD;AAELf,YAAAA,MAAM,EAAE,EAFH;AAGLE,YAAAA,QAAQ,EAAE;AAHL,WAAP;AAKD,SANgB,EAMd+F,KANc,CAMR,UAAUC,UAAV,EAAsB;AAC7B,cAAIC,YAAY,GAAG,EAAnB;AACA,cAAIC,cAAc,GAAG,EAArB;AACAF,UAAAA,UAAU,CAAC5I,OAAX,CAAmB,UAAU+I,KAAV,EAAiB;AAClC,gBAAIC,WAAW,GAAGD,KAAK,CAACE,IAAN,CAAWD,WAA7B;AAAA,gBACItG,MAAM,GAAGqG,KAAK,CAACrG,MADnB;;AAGA,gBAAIsG,WAAJ,EAAiB;AACfF,cAAAA,cAAc,CAACrI,IAAf,CAAoB2E,KAApB,CAA0B0D,cAA1B,EAA0CnN,kBAAkB,CAAC+G,MAAD,CAA5D;AACD,aAFD,MAEO;AACLmG,cAAAA,YAAY,CAACpI,IAAb,CAAkB2E,KAAlB,CAAwByD,YAAxB,EAAsClN,kBAAkB,CAAC+G,MAAD,CAAxD;AACD;AACF,WATD;;AAWA,cAAImG,YAAY,CAACvI,MAAjB,EAAyB;AACvB,mBAAO4I,OAAO,CAACC,MAAR,CAAe;AACpBtH,cAAAA,IAAI,EAAE4B,aADc;AAEpBf,cAAAA,MAAM,EAAEmG,YAFY;AAGpBjG,cAAAA,QAAQ,EAAEkG;AAHU,aAAf,CAAP;AAKD;;AAED,iBAAO;AACLjH,YAAAA,IAAI,EAAE4B,aADD;AAELf,YAAAA,MAAM,EAAEmG,YAFH;AAGLjG,YAAAA,QAAQ,EAAEkG;AAHL,WAAP;AAKD,SAjCgB,CAAjB;AAkCD;AACF,KAtED;;AAwEA,QAAIM,cAAc,GAAGlN,gBAAgB,CAACmM,WAAD,CAArC;AACAtL,IAAAA,KAAK,CAACS,mBAAN,GAA4B4L,cAA5B,CAjFiD,CAiFL;;AAE5CA,IAAAA,cAAc,CAACT,KAAf,CAAqB,UAAUU,OAAV,EAAmB;AACtC,aAAOA,OAAP;AACD,KAFD,EAEGX,IAFH,CAEQ,UAAUW,OAAV,EAAmB;AACzB,UAAIC,kBAAkB,GAAGD,OAAO,CAAC1J,GAAR,CAAY,UAAU4J,KAAV,EAAiB;AACpD,YAAI1H,IAAI,GAAG0H,KAAK,CAAC1H,IAAjB;AACA,eAAOA,IAAP;AACD,OAHwB,CAAzB;;AAKA9E,MAAAA,KAAK,CAACwI,eAAN,CAAsBxI,KAAK,CAACG,KAA5B,EAAmCoM,kBAAnC,EAAuD;AACrD9D,QAAAA,IAAI,EAAE;AAD+C,OAAvD;;AAIAzI,MAAAA,KAAK,CAACoK,qBAAN,CAA4BmC,kBAA5B,EAAgDD,OAAhD;AACD,KAbD;AAcA,QAAIG,aAAa,GAAGJ,cAAc,CAACV,IAAf,CAAoB,YAAY;AAClD,UAAI3L,KAAK,CAACS,mBAAN,KAA8B4L,cAAlC,EAAkD;AAChD,eAAOF,OAAO,CAACO,OAAR,CAAgB1M,KAAK,CAACY,cAAN,CAAqByF,YAArB,CAAhB,CAAP;AACD;;AAED,aAAO8F,OAAO,CAACC,MAAR,CAAe,EAAf,CAAP;AACD,KANmB,EAMjBR,KANiB,CAMX,UAAUU,OAAV,EAAmB;AAC1B,UAAIK,SAAS,GAAGL,OAAO,CAAC3I,MAAR,CAAe,UAAUiJ,MAAV,EAAkB;AAC/C,eAAOA,MAAM,IAAIA,MAAM,CAACjH,MAAP,CAAcpC,MAA/B;AACD,OAFe,CAAhB;AAGA,aAAO4I,OAAO,CAACC,MAAR,CAAe;AACpBpI,QAAAA,MAAM,EAAEhE,KAAK,CAACY,cAAN,CAAqByF,YAArB,CADY;AAEpBwG,QAAAA,WAAW,EAAEF,SAFO;AAGpBG,QAAAA,SAAS,EAAE9M,KAAK,CAACS,mBAAN,KAA8B4L;AAHrB,OAAf,CAAP;AAKD,KAfmB,CAApB,CAjGiD,CAgH7C;;AAEJI,IAAAA,aAAa,CAACb,KAAd,CAAoB,UAAUmB,CAAV,EAAa;AAC/B,aAAOA,CAAP;AACD,KAFD;AAGA,WAAON,aAAP;AACD,GAtHD;;AAwHA,OAAKjL,MAAL,GAAc,YAAY;AACxBxB,IAAAA,KAAK,CAACkE,eAAN;;AAEAlE,IAAAA,KAAK,CAACuB,cAAN,GAAuBoK,IAAvB,CAA4B,UAAU3H,MAAV,EAAkB;AAC5C,UAAIgJ,QAAQ,GAAGhN,KAAK,CAACM,SAAN,CAAgB0M,QAA/B;;AAEA,UAAIA,QAAJ,EAAc;AACZ,YAAI;AACFA,UAAAA,QAAQ,CAAChJ,MAAD,CAAR;AACD,SAFD,CAEE,OAAOiJ,GAAP,EAAY;AACZ;AACAC,UAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF;AACF,KAXD,EAWGrB,KAXH,CAWS,UAAUmB,CAAV,EAAa;AACpB,UAAIK,cAAc,GAAGpN,KAAK,CAACM,SAAN,CAAgB8M,cAArC;;AAEA,UAAIA,cAAJ,EAAoB;AAClBA,QAAAA,cAAc,CAACL,CAAD,CAAd;AACD;AACF,KAjBD;AAkBD,GArBD;;AAuBA,OAAKhN,eAAL,GAAuBA,eAAvB;AACD,CAn6B+C,CAAzC;;AAq6BP,SAASsN,OAAT,CAAiBC,IAAjB,EAAuB;AACrB,MAAIC,OAAO,GAAGtO,KAAK,CAACuO,MAAN,EAAd;;AAEA,MAAIC,eAAe,GAAGxO,KAAK,CAACyO,QAAN,CAAe,EAAf,CAAtB;AAAA,MACIC,gBAAgB,GAAGlP,cAAc,CAACgP,eAAD,EAAkB,CAAlB,CADrC;AAAA,MAEIG,WAAW,GAAGD,gBAAgB,CAAC,CAAD,CAFlC;;AAIA,MAAI,CAACJ,OAAO,CAACM,OAAb,EAAsB;AACpB,QAAIP,IAAJ,EAAU;AACRC,MAAAA,OAAO,CAACM,OAAR,GAAkBP,IAAlB;AACD,KAFD,MAEO;AACL;AACA,UAAIQ,aAAa,GAAG,SAASA,aAAT,GAAyB;AAC3CF,QAAAA,WAAW,CAAC,EAAD,CAAX;AACD,OAFD;;AAIA,UAAIG,SAAS,GAAG,IAAIjO,SAAJ,CAAcgO,aAAd,CAAhB;AACAP,MAAAA,OAAO,CAACM,OAAR,GAAkBE,SAAS,CAACrN,OAAV,EAAlB;AACD;AACF;;AAED,SAAO,CAAC6M,OAAO,CAACM,OAAT,CAAP;AACD;;AAED,eAAeR,OAAf","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nvar _excluded = [\"name\", \"errors\"];\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport { HOOK_MARK } from './FieldContext';\nimport { allPromiseFinish } from './utils/asyncUtil';\nimport cloneDeep from './utils/cloneDeep';\nimport { defaultValidateMessages } from './utils/messages';\nimport NameMap from './utils/NameMap';\nimport { cloneByNamePathList, containsNamePath, getNamePath, getValue, matchNamePath, setValue, setValues } from './utils/valueUtil';\nexport var FormStore = /*#__PURE__*/_createClass(function FormStore(forceRootUpdate) {\n  var _this = this;\n\n  _classCallCheck(this, FormStore);\n\n  this.formHooked = false;\n  this.forceRootUpdate = void 0;\n  this.subscribable = true;\n  this.store = {};\n  this.fieldEntities = [];\n  this.initialValues = {};\n  this.callbacks = {};\n  this.validateMessages = null;\n  this.preserve = null;\n  this.lastValidatePromise = null;\n\n  this.getForm = function () {\n    return {\n      getFieldValue: _this.getFieldValue,\n      getFieldsValue: _this.getFieldsValue,\n      getFieldError: _this.getFieldError,\n      getFieldWarning: _this.getFieldWarning,\n      getFieldsError: _this.getFieldsError,\n      isFieldsTouched: _this.isFieldsTouched,\n      isFieldTouched: _this.isFieldTouched,\n      isFieldValidating: _this.isFieldValidating,\n      isFieldsValidating: _this.isFieldsValidating,\n      resetFields: _this.resetFields,\n      setFields: _this.setFields,\n      setFieldsValue: _this.setFieldsValue,\n      validateFields: _this.validateFields,\n      submit: _this.submit,\n      _init: true,\n      getInternalHooks: _this.getInternalHooks\n    };\n  };\n\n  this.getInternalHooks = function (key) {\n    if (key === HOOK_MARK) {\n      _this.formHooked = true;\n      return {\n        dispatch: _this.dispatch,\n        initEntityValue: _this.initEntityValue,\n        registerField: _this.registerField,\n        useSubscribe: _this.useSubscribe,\n        setInitialValues: _this.setInitialValues,\n        destroyForm: _this.destroyForm,\n        setCallbacks: _this.setCallbacks,\n        setValidateMessages: _this.setValidateMessages,\n        getFields: _this.getFields,\n        setPreserve: _this.setPreserve,\n        getInitialValue: _this.getInitialValue,\n        registerWatch: _this.registerWatch\n      };\n    }\n\n    warning(false, '`getInternalHooks` is internal usage. Should not call directly.');\n    return null;\n  };\n\n  this.useSubscribe = function (subscribable) {\n    _this.subscribable = subscribable;\n  };\n\n  this.prevWithoutPreserves = null;\n\n  this.setInitialValues = function (initialValues, init) {\n    _this.initialValues = initialValues || {};\n\n    if (init) {\n      var _this$prevWithoutPres;\n\n      var nextStore = setValues({}, initialValues, _this.store); // We will take consider prev form unmount fields.\n      // When the field is not `preserve`, we need fill this with initialValues instead of store.\n      // eslint-disable-next-line array-callback-return\n\n      (_this$prevWithoutPres = _this.prevWithoutPreserves) === null || _this$prevWithoutPres === void 0 ? void 0 : _this$prevWithoutPres.map(function (_ref) {\n        var namePath = _ref.key;\n        nextStore = setValue(nextStore, namePath, getValue(initialValues, namePath));\n      });\n      _this.prevWithoutPreserves = null;\n\n      _this.updateStore(nextStore);\n    }\n  };\n\n  this.destroyForm = function () {\n    var prevWithoutPreserves = new NameMap();\n\n    _this.getFieldEntities(true).forEach(function (entity) {\n      if (!_this.isMergedPreserve(entity.isPreserve())) {\n        prevWithoutPreserves.set(entity.getNamePath(), true);\n      }\n    });\n\n    _this.prevWithoutPreserves = prevWithoutPreserves;\n  };\n\n  this.getInitialValue = function (namePath) {\n    var initValue = getValue(_this.initialValues, namePath); // Not cloneDeep when without `namePath`\n\n    return namePath.length ? cloneDeep(initValue) : initValue;\n  };\n\n  this.setCallbacks = function (callbacks) {\n    _this.callbacks = callbacks;\n  };\n\n  this.setValidateMessages = function (validateMessages) {\n    _this.validateMessages = validateMessages;\n  };\n\n  this.setPreserve = function (preserve) {\n    _this.preserve = preserve;\n  };\n\n  this.watchList = [];\n\n  this.registerWatch = function (callback) {\n    _this.watchList.push(callback);\n\n    return function () {\n      _this.watchList = _this.watchList.filter(function (fn) {\n        return fn !== callback;\n      });\n    };\n  };\n\n  this.notifyWatch = function () {\n    var namePath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // No need to cost perf when nothing need to watch\n    if (_this.watchList.length) {\n      var values = _this.getFieldsValue();\n\n      _this.watchList.forEach(function (callback) {\n        callback(values, namePath);\n      });\n    }\n  };\n\n  this.timeoutId = null;\n\n  this.warningUnhooked = function () {\n    if (process.env.NODE_ENV !== 'production' && !_this.timeoutId && typeof window !== 'undefined') {\n      _this.timeoutId = setTimeout(function () {\n        _this.timeoutId = null;\n\n        if (!_this.formHooked) {\n          warning(false, 'Instance created by `useForm` is not connected to any Form element. Forget to pass `form` prop?');\n        }\n      });\n    }\n  };\n\n  this.updateStore = function (nextStore) {\n    _this.store = nextStore;\n  };\n\n  this.getFieldEntities = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (!pure) {\n      return _this.fieldEntities;\n    }\n\n    return _this.fieldEntities.filter(function (field) {\n      return field.getNamePath().length;\n    });\n  };\n\n  this.getFieldsMap = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var cache = new NameMap();\n\n    _this.getFieldEntities(pure).forEach(function (field) {\n      var namePath = field.getNamePath();\n      cache.set(namePath, field);\n    });\n\n    return cache;\n  };\n\n  this.getFieldEntitiesForNamePathList = function (nameList) {\n    if (!nameList) {\n      return _this.getFieldEntities(true);\n    }\n\n    var cache = _this.getFieldsMap(true);\n\n    return nameList.map(function (name) {\n      var namePath = getNamePath(name);\n      return cache.get(namePath) || {\n        INVALIDATE_NAME_PATH: getNamePath(name)\n      };\n    });\n  };\n\n  this.getFieldsValue = function (nameList, filterFunc) {\n    _this.warningUnhooked();\n\n    if (nameList === true && !filterFunc) {\n      return _this.store;\n    }\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(Array.isArray(nameList) ? nameList : null);\n\n    var filteredNameList = [];\n    fieldEntities.forEach(function (entity) {\n      var _entity$isListField;\n\n      var namePath = 'INVALIDATE_NAME_PATH' in entity ? entity.INVALIDATE_NAME_PATH : entity.getNamePath(); // Ignore when it's a list item and not specific the namePath,\n      // since parent field is already take in count\n\n      if (!nameList && ((_entity$isListField = entity.isListField) === null || _entity$isListField === void 0 ? void 0 : _entity$isListField.call(entity))) {\n        return;\n      }\n\n      if (!filterFunc) {\n        filteredNameList.push(namePath);\n      } else {\n        var meta = 'getMeta' in entity ? entity.getMeta() : null;\n\n        if (filterFunc(meta)) {\n          filteredNameList.push(namePath);\n        }\n      }\n    });\n    return cloneByNamePathList(_this.store, filteredNameList.map(getNamePath));\n  };\n\n  this.getFieldValue = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n    return getValue(_this.store, namePath);\n  };\n\n  this.getFieldsError = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(nameList);\n\n    return fieldEntities.map(function (entity, index) {\n      if (entity && !('INVALIDATE_NAME_PATH' in entity)) {\n        return {\n          name: entity.getNamePath(),\n          errors: entity.getErrors(),\n          warnings: entity.getWarnings()\n        };\n      }\n\n      return {\n        name: getNamePath(nameList[index]),\n        errors: [],\n        warnings: []\n      };\n    });\n  };\n\n  this.getFieldError = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.errors;\n  };\n\n  this.getFieldWarning = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.warnings;\n  };\n\n  this.isFieldsTouched = function () {\n    _this.warningUnhooked();\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var arg0 = args[0],\n        arg1 = args[1];\n    var namePathList;\n    var isAllFieldsTouched = false;\n\n    if (args.length === 0) {\n      namePathList = null;\n    } else if (args.length === 1) {\n      if (Array.isArray(arg0)) {\n        namePathList = arg0.map(getNamePath);\n        isAllFieldsTouched = false;\n      } else {\n        namePathList = null;\n        isAllFieldsTouched = arg0;\n      }\n    } else {\n      namePathList = arg0.map(getNamePath);\n      isAllFieldsTouched = arg1;\n    }\n\n    var fieldEntities = _this.getFieldEntities(true);\n\n    var isFieldTouched = function isFieldTouched(field) {\n      return field.isFieldTouched();\n    }; // ===== Will get fully compare when not config namePathList =====\n\n\n    if (!namePathList) {\n      return isAllFieldsTouched ? fieldEntities.every(isFieldTouched) : fieldEntities.some(isFieldTouched);\n    } // Generate a nest tree for validate\n\n\n    var map = new NameMap();\n    namePathList.forEach(function (shortNamePath) {\n      map.set(shortNamePath, []);\n    });\n    fieldEntities.forEach(function (field) {\n      var fieldNamePath = field.getNamePath(); // Find matched entity and put into list\n\n      namePathList.forEach(function (shortNamePath) {\n        if (shortNamePath.every(function (nameUnit, i) {\n          return fieldNamePath[i] === nameUnit;\n        })) {\n          map.update(shortNamePath, function (list) {\n            return [].concat(_toConsumableArray(list), [field]);\n          });\n        }\n      });\n    }); // Check if NameMap value is touched\n\n    var isNamePathListTouched = function isNamePathListTouched(entities) {\n      return entities.some(isFieldTouched);\n    };\n\n    var namePathListEntities = map.map(function (_ref2) {\n      var value = _ref2.value;\n      return value;\n    });\n    return isAllFieldsTouched ? namePathListEntities.every(isNamePathListTouched) : namePathListEntities.some(isNamePathListTouched);\n  };\n\n  this.isFieldTouched = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsTouched([name]);\n  };\n\n  this.isFieldsValidating = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntities();\n\n    if (!nameList) {\n      return fieldEntities.some(function (testField) {\n        return testField.isFieldValidating();\n      });\n    }\n\n    var namePathList = nameList.map(getNamePath);\n    return fieldEntities.some(function (testField) {\n      var fieldNamePath = testField.getNamePath();\n      return containsNamePath(namePathList, fieldNamePath) && testField.isFieldValidating();\n    });\n  };\n\n  this.isFieldValidating = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsValidating([name]);\n  };\n\n  this.resetWithFieldInitialValue = function () {\n    var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // Create cache\n    var cache = new NameMap();\n\n    var fieldEntities = _this.getFieldEntities(true);\n\n    fieldEntities.forEach(function (field) {\n      var initialValue = field.props.initialValue;\n      var namePath = field.getNamePath(); // Record only if has `initialValue`\n\n      if (initialValue !== undefined) {\n        var records = cache.get(namePath) || new Set();\n        records.add({\n          entity: field,\n          value: initialValue\n        });\n        cache.set(namePath, records);\n      }\n    }); // Reset\n\n    var resetWithFields = function resetWithFields(entities) {\n      entities.forEach(function (field) {\n        var initialValue = field.props.initialValue;\n\n        if (initialValue !== undefined) {\n          var namePath = field.getNamePath();\n\n          var formInitialValue = _this.getInitialValue(namePath);\n\n          if (formInitialValue !== undefined) {\n            // Warning if conflict with form initialValues and do not modify value\n            warning(false, \"Form already set 'initialValues' with path '\".concat(namePath.join('.'), \"'. Field can not overwrite it.\"));\n          } else {\n            var records = cache.get(namePath);\n\n            if (records && records.size > 1) {\n              // Warning if multiple field set `initialValue`and do not modify value\n              warning(false, \"Multiple Field with path '\".concat(namePath.join('.'), \"' set 'initialValue'. Can not decide which one to pick.\"));\n            } else if (records) {\n              var originValue = _this.getFieldValue(namePath); // Set `initialValue`\n\n\n              if (!info.skipExist || originValue === undefined) {\n                _this.updateStore(setValue(_this.store, namePath, _toConsumableArray(records)[0].value));\n              }\n            }\n          }\n        }\n      });\n    };\n\n    var requiredFieldEntities;\n\n    if (info.entities) {\n      requiredFieldEntities = info.entities;\n    } else if (info.namePathList) {\n      requiredFieldEntities = [];\n      info.namePathList.forEach(function (namePath) {\n        var records = cache.get(namePath);\n\n        if (records) {\n          var _requiredFieldEntitie;\n\n          (_requiredFieldEntitie = requiredFieldEntities).push.apply(_requiredFieldEntitie, _toConsumableArray(_toConsumableArray(records).map(function (r) {\n            return r.entity;\n          })));\n        }\n      });\n    } else {\n      requiredFieldEntities = fieldEntities;\n    }\n\n    resetWithFields(requiredFieldEntities);\n  };\n\n  this.resetFields = function (nameList) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (!nameList) {\n      _this.updateStore(setValues({}, _this.initialValues));\n\n      _this.resetWithFieldInitialValue();\n\n      _this.notifyObservers(prevStore, null, {\n        type: 'reset'\n      });\n\n      _this.notifyWatch();\n\n      return;\n    } // Reset by `nameList`\n\n\n    var namePathList = nameList.map(getNamePath);\n    namePathList.forEach(function (namePath) {\n      var initialValue = _this.getInitialValue(namePath);\n\n      _this.updateStore(setValue(_this.store, namePath, initialValue));\n    });\n\n    _this.resetWithFieldInitialValue({\n      namePathList: namePathList\n    });\n\n    _this.notifyObservers(prevStore, namePathList, {\n      type: 'reset'\n    });\n\n    _this.notifyWatch(namePathList);\n  };\n\n  this.setFields = function (fields) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n    var namePathList = [];\n    fields.forEach(function (fieldData) {\n      var name = fieldData.name,\n          errors = fieldData.errors,\n          data = _objectWithoutProperties(fieldData, _excluded);\n\n      var namePath = getNamePath(name);\n      namePathList.push(namePath); // Value\n\n      if ('value' in data) {\n        _this.updateStore(setValue(_this.store, namePath, data.value));\n      }\n\n      _this.notifyObservers(prevStore, [namePath], {\n        type: 'setField',\n        data: fieldData\n      });\n    });\n\n    _this.notifyWatch(namePathList);\n  };\n\n  this.getFields = function () {\n    var entities = _this.getFieldEntities(true);\n\n    var fields = entities.map(function (field) {\n      var namePath = field.getNamePath();\n      var meta = field.getMeta();\n\n      var fieldData = _objectSpread(_objectSpread({}, meta), {}, {\n        name: namePath,\n        value: _this.getFieldValue(namePath)\n      });\n\n      Object.defineProperty(fieldData, 'originRCField', {\n        value: true\n      });\n      return fieldData;\n    });\n    return fields;\n  };\n\n  this.initEntityValue = function (entity) {\n    var initialValue = entity.props.initialValue;\n\n    if (initialValue !== undefined) {\n      var namePath = entity.getNamePath();\n      var prevValue = getValue(_this.store, namePath);\n\n      if (prevValue === undefined) {\n        _this.updateStore(setValue(_this.store, namePath, initialValue));\n      }\n    }\n  };\n\n  this.isMergedPreserve = function (fieldPreserve) {\n    var mergedPreserve = fieldPreserve !== undefined ? fieldPreserve : _this.preserve;\n    return mergedPreserve !== null && mergedPreserve !== void 0 ? mergedPreserve : true;\n  };\n\n  this.registerField = function (entity) {\n    _this.fieldEntities.push(entity);\n\n    var namePath = entity.getNamePath();\n\n    _this.notifyWatch([namePath]); // Set initial values\n\n\n    if (entity.props.initialValue !== undefined) {\n      var prevStore = _this.store;\n\n      _this.resetWithFieldInitialValue({\n        entities: [entity],\n        skipExist: true\n      });\n\n      _this.notifyObservers(prevStore, [entity.getNamePath()], {\n        type: 'valueUpdate',\n        source: 'internal'\n      });\n    } // un-register field callback\n\n\n    return function (isListField, preserve) {\n      var subNamePath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      _this.fieldEntities = _this.fieldEntities.filter(function (item) {\n        return item !== entity;\n      }); // Clean up store value if not preserve\n\n      if (!_this.isMergedPreserve(preserve) && (!isListField || subNamePath.length > 1)) {\n        var defaultValue = isListField ? undefined : _this.getInitialValue(namePath);\n\n        if (namePath.length && _this.getFieldValue(namePath) !== defaultValue && _this.fieldEntities.every(function (field) {\n          return (// Only reset when no namePath exist\n            !matchNamePath(field.getNamePath(), namePath)\n          );\n        })) {\n          var _prevStore = _this.store;\n\n          _this.updateStore(setValue(_prevStore, namePath, defaultValue, true)); // Notify that field is unmount\n\n\n          _this.notifyObservers(_prevStore, [namePath], {\n            type: 'remove'\n          }); // Dependencies update\n\n\n          _this.triggerDependenciesUpdate(_prevStore, namePath);\n        }\n      }\n\n      _this.notifyWatch([namePath]);\n    };\n  };\n\n  this.dispatch = function (action) {\n    switch (action.type) {\n      case 'updateValue':\n        {\n          var namePath = action.namePath,\n              value = action.value;\n\n          _this.updateValue(namePath, value);\n\n          break;\n        }\n\n      case 'validateField':\n        {\n          var _namePath = action.namePath,\n              triggerName = action.triggerName;\n\n          _this.validateFields([_namePath], {\n            triggerName: triggerName\n          });\n\n          break;\n        }\n\n      default: // Currently we don't have other action. Do nothing.\n\n    }\n  };\n\n  this.notifyObservers = function (prevStore, namePathList, info) {\n    if (_this.subscribable) {\n      var mergedInfo = _objectSpread(_objectSpread({}, info), {}, {\n        store: _this.getFieldsValue(true)\n      });\n\n      _this.getFieldEntities().forEach(function (_ref3) {\n        var onStoreChange = _ref3.onStoreChange;\n        onStoreChange(prevStore, namePathList, mergedInfo);\n      });\n    } else {\n      _this.forceRootUpdate();\n    }\n  };\n\n  this.triggerDependenciesUpdate = function (prevStore, namePath) {\n    var childrenFields = _this.getDependencyChildrenFields(namePath);\n\n    if (childrenFields.length) {\n      _this.validateFields(childrenFields);\n    }\n\n    _this.notifyObservers(prevStore, childrenFields, {\n      type: 'dependenciesUpdate',\n      relatedFields: [namePath].concat(_toConsumableArray(childrenFields))\n    });\n\n    return childrenFields;\n  };\n\n  this.updateValue = function (name, value) {\n    var namePath = getNamePath(name);\n    var prevStore = _this.store;\n\n    _this.updateStore(setValue(_this.store, namePath, value));\n\n    _this.notifyObservers(prevStore, [namePath], {\n      type: 'valueUpdate',\n      source: 'internal'\n    });\n\n    _this.notifyWatch([namePath]); // Dependencies update\n\n\n    var childrenFields = _this.triggerDependenciesUpdate(prevStore, namePath); // trigger callback function\n\n\n    var onValuesChange = _this.callbacks.onValuesChange;\n\n    if (onValuesChange) {\n      var changedValues = cloneByNamePathList(_this.store, [namePath]);\n      onValuesChange(changedValues, _this.getFieldsValue());\n    }\n\n    _this.triggerOnFieldsChange([namePath].concat(_toConsumableArray(childrenFields)));\n  };\n\n  this.setFieldsValue = function (store) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (store) {\n      var nextStore = setValues(_this.store, store);\n\n      _this.updateStore(nextStore);\n    }\n\n    _this.notifyObservers(prevStore, null, {\n      type: 'valueUpdate',\n      source: 'external'\n    });\n\n    _this.notifyWatch();\n  };\n\n  this.getDependencyChildrenFields = function (rootNamePath) {\n    var children = new Set();\n    var childrenFields = [];\n    var dependencies2fields = new NameMap();\n    /**\n     * Generate maps\n     * Can use cache to save perf if user report performance issue with this\n     */\n\n    _this.getFieldEntities().forEach(function (field) {\n      var dependencies = field.props.dependencies;\n      (dependencies || []).forEach(function (dependency) {\n        var dependencyNamePath = getNamePath(dependency);\n        dependencies2fields.update(dependencyNamePath, function () {\n          var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Set();\n          fields.add(field);\n          return fields;\n        });\n      });\n    });\n\n    var fillChildren = function fillChildren(namePath) {\n      var fields = dependencies2fields.get(namePath) || new Set();\n      fields.forEach(function (field) {\n        if (!children.has(field)) {\n          children.add(field);\n          var fieldNamePath = field.getNamePath();\n\n          if (field.isFieldDirty() && fieldNamePath.length) {\n            childrenFields.push(fieldNamePath);\n            fillChildren(fieldNamePath);\n          }\n        }\n      });\n    };\n\n    fillChildren(rootNamePath);\n    return childrenFields;\n  };\n\n  this.triggerOnFieldsChange = function (namePathList, filedErrors) {\n    var onFieldsChange = _this.callbacks.onFieldsChange;\n\n    if (onFieldsChange) {\n      var fields = _this.getFields();\n      /**\n       * Fill errors since `fields` may be replaced by controlled fields\n       */\n\n\n      if (filedErrors) {\n        var cache = new NameMap();\n        filedErrors.forEach(function (_ref4) {\n          var name = _ref4.name,\n              errors = _ref4.errors;\n          cache.set(name, errors);\n        });\n        fields.forEach(function (field) {\n          // eslint-disable-next-line no-param-reassign\n          field.errors = cache.get(field.name) || field.errors;\n        });\n      }\n\n      var changedFields = fields.filter(function (_ref5) {\n        var fieldName = _ref5.name;\n        return containsNamePath(namePathList, fieldName);\n      });\n      onFieldsChange(changedFields, fields);\n    }\n  };\n\n  this.validateFields = function (nameList, options) {\n    _this.warningUnhooked();\n\n    var provideNameList = !!nameList;\n    var namePathList = provideNameList ? nameList.map(getNamePath) : []; // Collect result in promise list\n\n    var promiseList = [];\n\n    _this.getFieldEntities(true).forEach(function (field) {\n      // Add field if not provide `nameList`\n      if (!provideNameList) {\n        namePathList.push(field.getNamePath());\n      }\n      /**\n       * Recursive validate if configured.\n       * TODO: perf improvement @zombieJ\n       */\n\n\n      if ((options === null || options === void 0 ? void 0 : options.recursive) && provideNameList) {\n        var namePath = field.getNamePath();\n\n        if ( // nameList[i] === undefined 说明是以 nameList 开头的\n        // ['name'] -> ['name','list']\n        namePath.every(function (nameUnit, i) {\n          return nameList[i] === nameUnit || nameList[i] === undefined;\n        })) {\n          namePathList.push(namePath);\n        }\n      } // Skip if without rule\n\n\n      if (!field.props.rules || !field.props.rules.length) {\n        return;\n      }\n\n      var fieldNamePath = field.getNamePath(); // Add field validate rule in to promise list\n\n      if (!provideNameList || containsNamePath(namePathList, fieldNamePath)) {\n        var promise = field.validateRules(_objectSpread({\n          validateMessages: _objectSpread(_objectSpread({}, defaultValidateMessages), _this.validateMessages)\n        }, options)); // Wrap promise with field\n\n        promiseList.push(promise.then(function () {\n          return {\n            name: fieldNamePath,\n            errors: [],\n            warnings: []\n          };\n        }).catch(function (ruleErrors) {\n          var mergedErrors = [];\n          var mergedWarnings = [];\n          ruleErrors.forEach(function (_ref6) {\n            var warningOnly = _ref6.rule.warningOnly,\n                errors = _ref6.errors;\n\n            if (warningOnly) {\n              mergedWarnings.push.apply(mergedWarnings, _toConsumableArray(errors));\n            } else {\n              mergedErrors.push.apply(mergedErrors, _toConsumableArray(errors));\n            }\n          });\n\n          if (mergedErrors.length) {\n            return Promise.reject({\n              name: fieldNamePath,\n              errors: mergedErrors,\n              warnings: mergedWarnings\n            });\n          }\n\n          return {\n            name: fieldNamePath,\n            errors: mergedErrors,\n            warnings: mergedWarnings\n          };\n        }));\n      }\n    });\n\n    var summaryPromise = allPromiseFinish(promiseList);\n    _this.lastValidatePromise = summaryPromise; // Notify fields with rule that validate has finished and need update\n\n    summaryPromise.catch(function (results) {\n      return results;\n    }).then(function (results) {\n      var resultNamePathList = results.map(function (_ref7) {\n        var name = _ref7.name;\n        return name;\n      });\n\n      _this.notifyObservers(_this.store, resultNamePathList, {\n        type: 'validateFinish'\n      });\n\n      _this.triggerOnFieldsChange(resultNamePathList, results);\n    });\n    var returnPromise = summaryPromise.then(function () {\n      if (_this.lastValidatePromise === summaryPromise) {\n        return Promise.resolve(_this.getFieldsValue(namePathList));\n      }\n\n      return Promise.reject([]);\n    }).catch(function (results) {\n      var errorList = results.filter(function (result) {\n        return result && result.errors.length;\n      });\n      return Promise.reject({\n        values: _this.getFieldsValue(namePathList),\n        errorFields: errorList,\n        outOfDate: _this.lastValidatePromise !== summaryPromise\n      });\n    }); // Do not throw in console\n\n    returnPromise.catch(function (e) {\n      return e;\n    });\n    return returnPromise;\n  };\n\n  this.submit = function () {\n    _this.warningUnhooked();\n\n    _this.validateFields().then(function (values) {\n      var onFinish = _this.callbacks.onFinish;\n\n      if (onFinish) {\n        try {\n          onFinish(values);\n        } catch (err) {\n          // Should print error if user `onFinish` callback failed\n          console.error(err);\n        }\n      }\n    }).catch(function (e) {\n      var onFinishFailed = _this.callbacks.onFinishFailed;\n\n      if (onFinishFailed) {\n        onFinishFailed(e);\n      }\n    });\n  };\n\n  this.forceRootUpdate = forceRootUpdate;\n});\n\nfunction useForm(form) {\n  var formRef = React.useRef();\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      forceUpdate = _React$useState2[1];\n\n  if (!formRef.current) {\n    if (form) {\n      formRef.current = form;\n    } else {\n      // Create a new FormStore if not provided\n      var forceReRender = function forceReRender() {\n        forceUpdate({});\n      };\n\n      var formStore = new FormStore(forceReRender);\n      formRef.current = formStore.getForm();\n    }\n  }\n\n  return [formRef.current];\n}\n\nexport default useForm;"]},"metadata":{},"sourceType":"module"}